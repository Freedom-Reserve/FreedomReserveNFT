{"version":3,"sources":["ethereum/config.js","ethereum/ethFunc.js","ethereum/store.js","ethereumContext.js","components/menu-item/menu-item.js","components/directory/directory.js","components/header/header.js","App.js","index.js"],"names":["config","infuraProvider","ethNodeURL0","ethNodeURL1","ethNodeURL4","ethNodeURL42","gasDataSource","password","DBID","serverNumer","isProduction","gasPrice","gasLimit","server0","server1","defaultUserChoice","user1","user2","recordsPerPage","contractPair","NFT721Creature_rinkeby","NFT721Sales_rinkeby","ERC20_FR_rinkeby","NFT721Creature_xDAI_0","NFT721Sales_xDAI_0","ERC20_FR_xDAI_0","NFT721Creature_xDAI_1","NFT721Sales_xDAI_1","ERC20_FR_xDAI_1","items","title","imageUrlFake","imageUrl","size","id","linkUrl","log1","console","log","extractCompo","compo","ctrtNum","acctIdx","a","undefined","error","length","instContracts","instNFT721Creature","instNFT721Sales","instTokenFR","Number","isInteger","parseInt","acct0","getEthNodeURL","Promise","resolve","reject","num","getGasData","url","isToAcceptOpaqueRes","fetch","catch","err","response","ok","json","resObj","gasPriceNew","result","ProposeGasPrice","text","data","JSON","parse","getCtrtAddresses","getInitWeb3","window","addEventListener","detectEthereumProvider","provider","web3","Web3","request","method","warn","selectedAddress","ethNodeURL","providers","HttpProvider","init","version","currentProvider","isMetaMask","mesg","eth","getAccounts","accounts","Array","isArray","chainId","ethereum","addrNFT721Creature","addrNFT721Sales","Contract","NFT721Creature","abi","NFT721Sales","BalanceOf","methods","balanceOf","call","balance","CheckUser","checkOwner","CheckUserResult","CheckAvailable","checkAvailableResult","isTokenAvailable","tokenId","addrFrom","exists","isExisting","ownerOf","tokenOwner","isNotOwned","buyNFTViaETH","priceInWeiETH","gasPriceFromAPI","send","from","value","gas","on","receipt","stringify","transactionHash","React","createContext","withRouter","tokenIDs","history","match","data1","useContext","EthereumContext","isAvailable","replace","includes","ItemLabel1","ItemStyle","buyNFTViaETH1","event","preventDefault","location","reload","className","onClick","e","style","backgroundImage","toUpperCase","Directory","rowNum","slice","map","otherProps","Header","hidden","href","target","rel","App","autoRefreshOnNetworkChange","userAddrDefault","gasPriceDefault","gasLimitDefault","useState","setCompo","nftBalance","nftBalanceSet","tokenIDsSet","tokenIDsForSales","tokenIDsForSalesSet","tokenIDsString","tokenIDsStringSet","tokenIDsStrSoldSet","useEffect","compo1","isMetaMask2","prevCompo","initAction","run","BalanceOf1","CheckUser1","CheckAvailable1","tokenIds","tokenIdsString1","forEach","item","idx","push","hasNumber","toString","myString","test","networkId","Provider","Form","onSubmit","Button","content","color","Label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f035a2b1.chunk.js","sourcesContent":["/*config ...\n@type: Configuration\n@brief ... \n\n//-------------== To Deploy\nFor Production:  isProduction to 1\n\n$ yarn deploy\nThen push\n//-------------==\nmanual push: copy ethereum192x192.png into repo\n\nerc20TokenAddress: '',\n\n@author Raymond Lieu\n@date   2021-04-17\n*/\nexport const config = {\n  infuraProvider:\n    \"https://eth-mainnet.alchemyapi.io/v2/k2--UTxxx\",\n  ethNodeURL0: \"\",\n  ethNodeURL1: \"https://mainnet.infura.io/v3/75df2\",\n  ethNodeURL4: \"https://rinkeby.infura.io/v3/75d\",\n  ethNodeURL42: \"https://kovan.infura.io/v3/75d\",\n  gasDataSource:\n    \"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=GH7KVC23UWE9BTDKDVRDSTTE5X8I25U2X5\",\n  password: \"abc123\",\n  DBID: 0,\n  serverNumer: 1,\n  isProduction: 1,\n  gasPrice: 155,\n  gasLimit: 1000000,\n  server0: \"http://localhost:3000\",\n  server1: \"https://google.com\",\n  defaultUserChoice: 2,\n  user1: \"\",\n  user2: \"0xF694dCbec7f434dE9F892cfACF0449DB8661334D\",\n  recordsPerPage: 3,\n  contractPair: 4,\n  NFT721Creature_rinkeby: \"0xa8e5142885Ec751fA9CE34a32E6a978DEaC22C8e\",\n  NFT721Sales_rinkeby: \"0x8Ace2c3Cc2e4657312b0B19F51a402Ffc74f9c1a\",\n  ERC20_FR_rinkeby: \"\",\n  NFT721Creature_xDAI_0: \"0xEf169fbA14000463C9A9747C6Ab39750CaeBA440\",\n  NFT721Sales_xDAI_0: \"0xc2153D539cE9778e7011BdC5bA7E56aE8F87d22e\",\n  ERC20_FR_xDAI_0: \"\",\n  NFT721Creature_xDAI_1: \"\",\n  NFT721Sales_xDAI_1: \"\",\n  ERC20_FR_xDAI_1: \"0x270DE58F54649608D316fAa795a9941b355A2Bd0\",\n};\nexport const items = [\n  {\n    title: '# 01',\n    imageUrlFake: '',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiahy2ednf4l2eak4voxoskuqrqh4pnqewxx4f2n6x7jsw6w2ic3gi',\n    size: 'small',\n    id: 1,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 02',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeihxphm3msrktv23s5yuhsct7bvmvic75sifa2oa3mbct3optnggwu',\n    size: 'small',\n    id: 2,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 03',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeib5a36m6dzk7ivztqgmhhzlgtjx2eulvtbxm6all7xe3hmppkuoae',\n    size: 'small',\n    id: 3,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 04',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeibebbfxvxkkxuaei7emgb4vmngykkbq7gnxy2muwb6e7653uvdlfi',\n    size: 'small',\n    id: 4,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 05',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiekfwtnovtiz7zu5haq7t6vhyzno3lqurwehsprcvi3gho6fema2e',\n    size: 'small',\n    id: 5,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 06',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fttxvo74eik62otd2wy6d6zty5wwig7ocb6waqvl6tfrwb2sze',\n    size: 'small',\n    id: 6,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 07',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeic6l4dehe3usvf25wmd5muzux2mfpe4pjapgir4cmyk43tmin6dei',\n    size: 'small',\n    id: 7,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 08',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifw7vgtgjdcuzfuhhorwp536z34tfsxv3ygetfa42ocbxnxycoxcu',\n    size: 'small',\n    id: 8,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 09',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifuhh42leyt63cfsvrygygrojnlqwvo5676n5x43lhyvstffc5slq',\n    size: 'small',\n    id: 9,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 10',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fibnfg7qiblfa7bkovljjp3755fpkdfhlxfcbciduu7nndjfze',\n    size: 'small',\n    id: 10,\n    linkUrl: 'shop/mens'\n  }\n];\n\nexport const dbSelections = [\n  {\n    key: \"0\",\n    text: \"Dev1 DB\",\n    value: \"0\",\n  },\n  {\n    key: \"1\",\n    text: \"Prod1 DB\",\n    value: \"1\",\n  },\n];\n\n","import detectEthereumProvider from '@metamask/detect-provider'\nimport { ethers, BigNumber} from \"ethers\"; //BigNumber\nimport Web3 from \"web3\";\nimport { config } from \"../ethereum/config\";\n//import ERC20Token from \"./ERC20Token.json\";\nimport NFT721Creature from \"./NFT721Creature.json\";\nimport NFT721Sales from \"./NFT721Sales.json\";\n//import ERC20TokenFR from \"./ERC20TokenFR.json\";\n\n//import { rewardsCtrtIdxes, dbSelections } from \"./config\";\n// const instance = new web3.eth.Contract(\n//     JSON.parse(NFTokenMetadataEnumerable.interface),\n//     '0xe6Da20c6F3ba3ac86C7FA3da155E5847F3cDE7e6'\n// );\n// export default instance;\n//--------------------------== utils\nexport const log1 = console.log;\n//const bigNum = (item) => BigNumber.from(item);\n\n//const dp = 18;\n//const base = bigNum(10).pow(dp);\n//const SECONDS_IN_A_DAY = 86400;\n//const one1 = constants.One;\n//const bnOne = bigNum(one1);\n//const MAX_INTEGER = new bigNum(2).pow(new bigNum(256)).sub(new bigNum(1));\n//const OptionType = { Put: 1, Call: 2 };\nexport const addr0 = \"0x0000000000000000000000000000000000000000\";\n\n//const amp = 1000000;\nexport const GWEI = 1000000000;\n\nexport const fromWeiE = (weiAmount, dp = 18) => {\n  try {\n    return ethers.utils.formatUnits(weiAmount, parseInt(dp));\n  } catch (err) {\n    console.error(\"fromWeiE() failed:\", err);\n    return -1;\n  }\n}//input: BN or string, dp = 6 or 18 number, output: string\n\nexport const toWeiE = (amount, dp = 18) => {\n  try {\n    return ethers.utils.parseUnits(amount, parseInt(dp));\n  } catch (err) {\n    console.error(\"toWeiE() failed:\", err);\n    return -1;\n  }\n}//input: string, output: Bn\n\nexport const fromWei = (weiAmount) => fromWeiE(weiAmount);\n//web3.utils.fromWei(weiAmount.toString(), \"ether\");\n\nexport const toWei = (amount) => toWeiE(amount);\n//web3.utils.toWei(amount.toString(), \"ether\");\n\n//--------------------------== \nexport const getTokenBalance = async (compo, userAddr) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== getTokenBalance()\");\n  const [instERC20TokenFR, acct0] = await extractCompo(compo, 2, 0);\n\n  if (instERC20TokenFR === undefined || acct0 === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = acct0;\n    console.log(\"using default accounts[0]\");\n  }\n  console.log(\"userAddr:\", userAddr);\n  try {\n    const data = await instERC20TokenFR.methods.balanceOf(userAddr).call();\n    console.log(\"data:\", data);\n      resolve(data);\n  } catch (err) {\n    console.error(\"getTokenBalance() failed.\", err);\n    reject(-1);\n  }\n});\n//--------------------------==\nexport const extractCompo = async(compo, ctrtNum, acctIdx) => {\n  //log1(\"compo:\", compo);\n  if (compo === undefined) {\n    console.error(\"compo is undefined\");\n    return [-1];\n  }\n  if (ctrtNum === undefined) {\n    console.error(\"ctrtNum is undefined\");\n    return [-1];\n  }\n  if(compo.length < 2){\n    console.error(\"compo is not complete\");\n    return [-1];\n  }\n  const instContracts = compo[3];\n  if(instContracts === undefined){\n    console.error(\"instContracts undefined\")\n  } else if(instContracts.length < 2){\n    console.error(\"instContracts length is less than 3\")\n  }\n  const instNFT721Creature = instContracts[0];\n  const instNFT721Sales = instContracts[1];\n  const instTokenFR = \"\";//instContracts[2];\n  if(Number.isInteger(acctIdx) && parseInt(Number(acctIdx)) >= 0) {\n    //const addr1 = await getAccounts(compo[0]);\n    const acct0 = compo[1][acctIdx];\n    //console.log(\"acct0:\", acct0);\n\n    if(ctrtNum === 2) {\n      return [instTokenFR, acct0];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales, acct0];\n    } else {\n      return [instNFT721Creature, acct0];\n    }\n  } else {\n    if(ctrtNum === 2) {\n      return [instTokenFR];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales];\n    } else {\n      return [instNFT721Creature];\n    }\n  }\n}\n\nexport const func = async (compo) =>\nnew Promise(async (resolve, reject) => {\nresolve(-1);\n});\n\n//let stakedAmount  = fromWeiE(weiAmount, dp);\n\n// const err1 = checkDropdown(network1, rewardsCtrtIndex);\n  // if (err1) {\n  //   reject(err1);\n  // }\n\n//---------------------== utility function\nconst getEthNodeURL = async () =>\n  new Promise(async (resolve, reject) => {\n    const num = config.contractPair;\n    if (num === 1) {\n      resolve(config.ethNodeURL1);\n    } else if (num === 4) {\n      resolve(config.ethNodeURL4);\n    } else if (num === 42) {\n      resolve(config.ethNodeURL42);\n    } else {\n      console.error(\"ethNodeNumber is invalid\");\n      reject(\"ethNodeNumber is invalid\");\n    }\n  });\n\nexport const getGasData = async () =>\n  new Promise(async (resolve, reject) => {\n    log1(\"---------== getGasData()\");\n    const url = config.gasDataSource;\n    const isToAcceptOpaqueRes = false;\n    const response = await fetch(url).catch((err) => {\n      log1(\"err@ fetch:\", err);\n      reject(false);\n    });\n    log1(\"response:\", response);\n    if (response && response.ok) {\n      let resObj = await response.json();\n      log1(\"resObj:\", resObj);\n      const gasPriceNew = resObj.result.ProposeGasPrice;\n      log1(\"ProposeGasPrice:\", gasPriceNew);\n      resolve(gasPriceNew);\n    } else if (isToAcceptOpaqueRes) {\n      let data = await response.text();\n      log1(\"ProposeGasPrice:\", data);\n      resolve(data ? JSON.parse(data) : {});\n    } else {\n      reject(false);\n    }\n  });\n\n\n  //--------------------------==\nexport const getProviderSigner = async () => \nnew Promise((resolve, reject) => {\n  window.addEventListener(\"load\", async () => {\n    // wait for loading completion to avoid race condition with web3 injecting timing\n    if (window.ethereum) {\n      //new version of MetaMask exists\n      log1(\"newer ehereum detected\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    } else {\n      const ethNodeURL = await getEthNodeURL().catch((err) => {\n        reject(err);\n      });\n      log1(\"using ethNodeURL:\", ethNodeURL);\n      const provider = new ethers.providers.JsonRpcProvider(ethNodeURL);\n      log1(\"no ethereum injected. Use infura endpoint\");\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    }\n  });\n});\n\nexport const getCtrtAddresses = async () =>\nnew Promise(async (resolve, reject) => {\n  const num = config.contractPair;\n  let ctrtAddrs;\n  if (num === 77) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_0, config.NFT721Sales_xDAI_0];\n    resolve(ctrtAddrs);\n  } else if (num === 100) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_1, config.NFT721Sales_xDAI_1];\n    resolve(ctrtAddrs);\n  } else if (num === 4) {\n    ctrtAddrs = [config.NFT721Creature_rinkeby, config.NFT721Sales_rinkeby];\n    resolve(ctrtAddrs);\n  } else {\n    console.error(\"contractPair is invalid\");\n    reject(\"contractPair is invalid\");\n  }\n});\n\nexport const getInitWeb3 = async () =>\n  new Promise((resolve, reject) => {\n    window.addEventListener(\"load\", async () => {\n      // this addEventListener is only needed if you run this getInitWeb3 when the website loads up... wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    });\n  });\n  \nexport const getWeb3 = async () =>\n  new Promise(async(resolve, reject) => {\n    //window.addEventListener(\"load\", async () => {\n      // wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    //});\n  });\n\nexport const init = async () =>\n  new Promise(async (resolve, reject) => {\n    let mesg;\n    console.log(\"init()\");\n    try {\n      //const web3 = await getInitWeb3().\n      const web3 = await getInitWeb3().catch((err) => {\n        reject(err);\n        return false;\n      });\n      if (typeof web3 === \"undefined\") {\n        log1(\"missing web3:\", web3, typeof web3);\n        reject(\"missing web3\");\n        return false;\n      }\n      log1(\"web3 version:\", web3.version);\n\n      const isMetaMask = await web3.currentProvider.isMetaMask;\n      log1(\"isMetaMask\", isMetaMask);\n      if (!isMetaMask) {\n        mesg = \"Please install MetaMask browser extension\";\n        log1(mesg);\n        reject(mesg);\n        return false;\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      // const networkId = await web3.eth.net.getId();\n      // const deployedNetwork = ctrtX.networks[networkId];\n      if (!Array.isArray(accounts) || accounts.length === 0) {\n        mesg = \"missing accounts\";\n        log1(\n          \"missing accounts:\",\n          accounts,\n          Array.isArray(accounts),\n          accounts.length\n        );\n        reject(mesg);\n        return false;\n      }\n      if (accounts[0] === undefined) {\n        mesg = \"Please login to MetaMask(ETH wallet)\";\n        log1(mesg);\n        reject(mesg);\n        return false;\n      }\n      console.log(\"accounts:\", accounts);\n\n      const chainId = parseInt(window.ethereum.chainId, 16);\n      console.log(\"chainId:\", chainId);\n      if(chainId === 77){\n        log1(\"chainId 77 for xDai Testnet detected\");\n      } else if(chainId === 1){\n        log1(\"chainId 1 for Ethereum Mainnet detected\");\n      } else if(chainId === 4){\n        log1(\"chainId 4 for Ethereum Rinkeby detected\");\n      } else {\n        mesg = \"chainId invalid\";\n        reject(mesg);\n        return false;\n      }\n\n      const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n      console.log(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n\n      const instNFT721Creature = new web3.eth.Contract(\n        NFT721Creature.abi,\n        addrNFT721Creature\n      );\n      if (typeof instNFT721Creature === \"undefined\") {\n        log1(\"missing instNFT721Creature:\", instNFT721Creature);\n        reject(\"missing instNFT721Creature\");\n        return false;\n      }\n\n      const instNFT721Sales = new web3.eth.Contract(\n        NFT721Sales.abi,\n        addrNFT721Sales\n      );\n      if (typeof instNFT721Sales === \"undefined\") {\n        log1(\"missing instNFT721Sales:\", instNFT721Sales);\n        reject(\"missing instNFT721Sales\");\n        return false;\n      }\n\n      const instContracts = [\n        instNFT721Creature, instNFT721Sales\n      ];\n\n      log1(\"init is successful\");\n      resolve([web3, accounts, chainId, instContracts]);\n    } catch (error) {\n      log1(error);\n      reject(\"init failed\");\n    }\n  });\n\n\n/**\n      const instERC20 = new web3.eth.Contract(\n        ERC20Token.abi,\n        config.erc20TokenAddress\n      ); //deployedNetwork && deployedNetwork.address,\n      if (typeof instERC20 === \"undefined\") {\n        log1(\"missing instERC20:\", instERC20);\n        reject(\"missing instERC20\");\n      }\n\nconst getERC20CtrtStates = async (web3, addr, instERC20) =>\n  new Promise(async (resolve, reject) => {\n    try {\n      log1(\"instERC20:\", instERC20);\n      const name = \"\"; //await instERC20.methods.name().call();\n      const symbol = \"\"; //await instERC20.methods.symbol().call();\n      const decimals = \"\"; //await instERC20.methods.decimals().call();\n      const version = \"\"; //await instERC20.methods.version().call();\n      const totalSupply = \"\"; //await instERC20.methods.totalSupply().call();\n\n      const weiAmount = await instERC20.methods.balanceOf(addr).call();\n      const usrAmount = web3.utils.fromWei(weiAmount, \"ether\");\n      log1(\"addr balance:\", usrAmount);\n      resolve([usrAmount, name, symbol, decimals, version, totalSupply]);\n    } catch (error) {\n      log1(error);\n      reject(\"getERC20CtrtStates failed\");\n    }\n  });\n\n  */\n","import { ethers, BigNumber} from \"ethers\"; //BigNumber\nimport { config } from \"./config\";\nimport {extractCompo, toWei, fromWei, GWEI, addr0, getCtrtAddresses, getGasData} from \"./ethFunc\";\n\n//--------------------------==\n//--------------------------== initAction()\n/** should be run once and save compo1 into a state variable for all other functions to use\n\n*/\n//--------------------------==\nexport const ReadFunc = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== ReadFunc()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const data = await instNFT721Creature.methods.name().call();\n    console.log(\"data:\", data);\n    resolve(data);\n  } catch (err) {\n    console.error(\"ReadFunc() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const BalanceOf = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== BalanceOf()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const balance = await instNFT721Creature.methods.balanceOf(acct0).call();\n    console.log(\"balance:\", balance);\n    resolve(balance);\n  } catch (err) {\n    console.error(\"BalanceOf() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckUser = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== CheckUser()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n\n  try {\n    const CheckUserResult = await instNFT721Creature.methods.checkOwner(acct0).call();\n    console.log(\"CheckUserResult:\", CheckUserResult);\n    resolve(CheckUserResult);\n  } catch (err) {\n    console.error(\"CheckUser() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckAvailable = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== CheckAvailable()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n  console.log(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n  try {\n    const checkAvailableResult = await instNFT721Creature.methods.checkOwner(addrNFT721Sales).call();\n    console.log(\"checkAvailableResult:\", checkAvailableResult);\n    resolve(checkAvailableResult);\n  } catch (err) {\n    console.error(\"CheckAvailable() failed.\", err);\n    reject(-1);\n  }\n});\n\n\nexport const GetXYZ = async (compo, userAddr, option) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== GetXYZ()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined || acct0 === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = acct0;\n    console.log(\"using default accounts[0]\");\n  }\n  console.log(\"userAddr:\", userAddr);\n  try {\n    const data = await instNFT721Creature.methods.betters(userAddr).call();\n    console.log(\"data:\", data);\n    if(option === 0){\n      resolve(data.deposit);\n    } else if(option === 1){\n      resolve(data.balance);\n    } else if(option === 2){\n      resolve(data.winloss);\n    } else {\n      resolve(data);\n    }\n  } catch (err) {\n    console.error(\"GetXYZ() failed.\", err);\n    reject(-1);\n  }\n});\n\n\n//-------------==\nexport const isTokenAvailable = async (compo, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== isTokenAvailable()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n\n  const isExisting = await instNFT721Creature.methods.exists(tokenId).call();\n  const tokenOwner = await instNFT721Creature.methods.ownerOf(tokenId).call();\n  const isNotOwned = tokenOwner !== addrFrom;\n  console.log(\"isExisting:\", isExisting, \", isNotOwned:\", isNotOwned);\n  resolve(isExisting && isNotOwned);\n});\n\nexport const buyNFTViaETH = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== buyNFTViaETH()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      // const addrNFTContract = await instNFT721Sales.methods.addrNFTContract().call();\n      // console.log(\"addrNFTContract:\",addrNFTContract );\n      const isAvailable = await isTokenAvailable(compo, tokenId);\n      if(!isAvailable){\n        console.log(\"tokenId not available\");\n        reject(\"tokenId not available\");\n        return false;\n      }\n\n      const priceInWeiETH = await instNFT721Sales.methods.priceInWeiETH().call();\n      //const value1 = web3.utils.toWei('0.1', \"ether\");\n      const gasPriceFromAPI = await getGasData();\n\n      console.log(\"addrFrom:\", addrFrom, \", gasPriceFromAPI:\", gasPriceFromAPI, \", gasLimit:\", gasLimit, tokenId, priceInWeiETH, typeof priceInWeiETH );\n    \n      await instNFT721Sales.methods\n        .buyNFTViaETH(tokenId)\n        .send({\n          from: addrFrom,\n          value: priceInWeiETH,\n          gasPrice: gasPriceFromAPI * GWEI,\n          gas: gasLimit,\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          resolve(receipt.transactionHash);\n        })\n        .on(\"error\", (err, receipt) => {\n          console.error(\"txn failed:\", err);\n          reject(err);\n          return false;\n        });\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\nexport const buyNFTViaETHCheck = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== buyNFTViaETHCheck()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  console.log(\"addrFrom:\", addrFrom, gasPrice, gasLimit, tokenId);\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      const result = await instNFT721Sales.methods\n        .BuyNFTViaETHCheck(tokenId)\n        .call({from: addrFrom});\n        resolve(result);\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n","import React from \"react\";\nexport default React.createContext(undefined);","import React, { useContext } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Form, Button, Input, Label, Message, Dropdown,\n  Grid, } from \"semantic-ui-react\";\nimport EthereumContext from \"../../ethereumContext\"; //no {}\nimport { withRouter } from 'react-router-dom';\nimport './menu-item.scss';\nimport {config} from '../../ethereum/config';\nimport { ReadFunc, buyNFTViaETH, buyNFTViaETHCheck, BalanceOf } from '../../ethereum/store';\n\nconst MenuItem = ({title, imageUrl, size, history, tokenIDs, match}) => {\n  console.log(\"---------== MenuItem\")\n  const compo = useContext(EthereumContext);\n  let data1, isAvailable = false;\n\n  const tokenId = parseInt(title.replace(\"# \", \"\"));\n  if(Array.isArray(tokenIDs) && tokenIDs.length > 0){\n    console.log(\"tokenIDs exist\");\n    isAvailable  = tokenIDs.includes(tokenId);\n  }\n  console.log(\"tokenId:\", tokenId, \", isAvailable:\", isAvailable);\n  \n  const ItemLabel1 = (isAvailable)?\"BUY NOW\":\"Sold Out\";\n  const ItemStyle = (isAvailable)?\"BUYNOW\":\"SoldOut\";\n\n  if (config.isProduction !== 1) {\n    imageUrl = \"/img/3dgold1.png\";\n  }\n  const buyNFTViaETH1 = async (event) => {\n    event.preventDefault();\n    console.log(\"---------== buyNFTViaETH1():\", title);\n    // setLoading(true);\n    // setErrMsg(\"\");\n    if(isAvailable){\n      const gasPrice = config.gasPrice;\n      const gasLimit = config.gasLimit;\n  \n      data1 = await buyNFTViaETH(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n        //setErrMsg(\"buyNFTViaETH1 failed\");\n        return false;\n      });\n      console.log(\"txHash:\", data1);\n      window.location.reload();\n    } else {\n      console.log(\"already sold\")\n    }\n  }\n  \n  return (\n    <div \n      className={`${size} menu-item`} //dynamic classname\n      onClick={(e)=> {\n        console.log(\"clicked\", title);\n        buyNFTViaETH1(e);\n        }}\n      >\n      \n      <div className='background-image' \n      style={{backgroundImage: `url(${imageUrl})`  }} />\n\n      <div className='content'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <span className={`${ItemStyle} subtitle`} >{ItemLabel1}</span>\n      </div>\n\n    </div>\n  );\n}\n//export default (MenuItem);\nexport default withRouter(MenuItem);\n/**\n  onClick={()=> history.push(`${match.url}${linkUrl}`)\n  \n      <CustomButton onClick={()=> console.log(\"clicked\")} inverted>\n        Add to cart </CustomButton>\n\n<div className='content'>\n      <h1 className='title'>{title.toUpperCase()}</h1>\n      <span className='subtitle'>SHOP NOW</span>\n    </div>\n */","import React from 'react';\n\nimport MenuItem from '../menu-item/menu-item';\nimport {items} from '../../ethereum/config';\nimport './directory.styles.scss';\n\nconst Directory = ({rowNum, tokenIDs}) =>  {\n  console.log(\"---------== Directory \\nrowNum:\", rowNum, \", tokenIDs:\", tokenIDs);\n  if (!Array.isArray(tokenIDs) || !tokenIDs.length) {\n    console.log(\"tokenIDs: not an array or is empty\")\n    return (\n      <div className='directory-menu'>No tokenIDs</div>\n    );\n  } else if(rowNum === 1) {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(0, 5).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs}/>\n        ))\n      }\n      </div>\n    );\n  } else {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(5, 10).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs} />\n        ))\n      }\n      </div>\n    );\n  }\n}\n\nexport default Directory;\n/**------------==\n        this.state.sections.map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} />\n        ))\n***------------==\n        this.state.sections.map(({id, title, imageUrl, id, size, linkUrl}) => (\n          <MenuItem key={id} title={title} imageUrl={imageUrl} size={size}\n*/","import React from 'react';\n//import {Link} from 'react-router-dom';\n//import { ReactComponent as Logo } from '../../assets/crown.svg';\nimport './header.scss';\n\nconst Header = ({ hidden }) => (\n  <div className='header'>\n\n    <div className='options'>\n      <a className='option' href=\"https://freedomreserv.eth.link/main.html\" target=\"_blank\" rel=\"noreferrer\">\n      back to homepage\n      </a>\n\n    </div>\n  </div>\n);\n\n//{user: {curentUser}, cart: {hidden}}\n\nexport default Header;\n/**\n    <div className='options'>\n    <Link className='logo-container' to=\"/\">\n      <Logo className='logo' />\n    </Link>\n\n    <Link className='option' to='https://freedomreserv.eth.link'>\n        HOME PAGE\n      </Link>\n\n    </div>\n\n\n\n    */","import \"./App.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Input, Label, Message, } from \"semantic-ui-react\";\n//Card, Header, Segment, GridRow, Dropdown, Grid, \n\n//import { DropDownRewardsCtrts } from \"./dropdown\";\nimport {init, log1, } from \"./ethereum/ethFunc\";//getGasData, getERC20Balance, fromWei, checkNetwork, getNFTBalance, \nimport { config } from \"./ethereum/config\";//rewardsCtrtIdxes, dbSelections, assetNames, outcomes, \nimport {BalanceOf, CheckUser, CheckAvailable } from \"./ethereum/store\";\n\nimport Directory from './components/directory/directory';\nimport Header from './components/header/header';\n\n/**\nTo add a function: duplicate App function, errMsg, UI, store function(Ethereum function), replace from red part in App.js\n*/\nimport EthereumContext from \"./ethereumContext\"; //no {}\n//import ChildComponent from \"./ChildComponent\";\n\nfunction App() {\n  if(window.ethereum) window.ethereum.autoRefreshOnNetworkChange = false;\n\n  const gasPriceDefault = config.gasPriceDefault;//1 GWei\n  const gasLimitDefault = config.gasLimitDefault;//1000000\n  const [compo, setCompo] = useState([]);\n\n  const [gasPrice, setGasPrice] = useState(gasPriceDefault);\n  const [gasLimit, setGasLimit] = useState(gasLimitDefault);\n  const [loading, setLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const userChoice = config.defaultUserChoice;\n  let userAddrDefault;\n  if(userChoice === 1) {\n    userAddrDefault = config.user1;\n  } else {\n    userAddrDefault = config.user2;\n  }\n  const [userAddr, userAddrSet] = useState(userAddrDefault);\n\n  const [nftBalance, nftBalanceSet] = useState(-1);\n  const [tokenIDs, tokenIDsSet] = useState([]);\n  const [tokenIDsForSales, tokenIDsForSalesSet] = useState([]);\n  const [tokenIDsString, tokenIDsStringSet] = useState(\"\");\n  const [tokenIDsStrSold, tokenIDsStrSoldSet] = useState(\"\");\n\n  useEffect(() => {\n    //cannot add async here, so make async below\n    const initAction = async () => {\n      const compo1 = await init().catch((err) => {\n        console.error(`initAction failed: ${err}`);\n        //alert(`initialization failed`);\n        return;\n      });\n      //log1(\"compo1 length:\", compo1.length)\n      // await BalanceOf1();\n      // await CheckUser1();\n      // await CheckAvailable1();\n      setCompo(compo1);\n\n      if(!window.ethereum){\n        console.error(\"window.ethereum does not exist\")\n        return;\n      }\n      const provider = window.ethereum;\n      const isMetaMask2 = provider.isMetaMask;\n      log1(\"isMetaMask2:\", isMetaMask2);\n      \n      provider.on('accountsChanged', (accounts) =>{\n        log1(\"accountsChanged:\", accounts);\n        if(accounts.length === 0){\n          console.error(\"accounts are empty\");\n        }\n        setCompo(prevCompo => [prevCompo[0], accounts, prevCompo[2], prevCompo[3]]);\n      });\n      \n      provider.on('chainChanged', (chainId) => {\n        log1(\"App chainId:\", chainId);\n        // Handle the new chain.\n        // Correctly handling chain changes can be complicated.\n        // We recommend reloading the page unless you have good reason not to.\n        window.location.reload();\n      });\n    };\n    initAction();\n  }, []); //[] for running once\n\n  //wait for all requirements are populated: load initial conditions\n  useEffect(() => {\n    const run = async () => {\n      log1(\"useEffect2: good\")\n      await BalanceOf1();\n      await CheckUser1();\n      await CheckAvailable1();\n    };\n    if (!Array.isArray(compo) || !compo.length) {\n      log1(\"useEffect2: is not an array, or is empty\")\n    } else {\n      run();\n    }\n  }, [compo]);\n\n  //const delayInMilliseconds = 5000; //1 second\n  // const showErrForDuration = async () => {\n  //   setTimeout(function () {\n  //     //your code to be executed after 1 second\n  //   }, delayInMilliseconds);\n  // };\n\n  const BalanceOf1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== BalanceOf1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await BalanceOf(compo).catch((err) => {\n      //setErrMsg(\"BalanceOf1 failed\");\n      return false;\n    });\n    nftBalanceSet(data1);\n  }\n\n  const CheckUser1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckUser1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckUser(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckUser:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      log1(\"is not an array, or is empty\")\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIds:\", tokenIds, tokenIdsString1);\n    tokenIDsSet(tokenIds);\n    tokenIDsStringSet(tokenIdsString1);\n  }\n\n  const CheckAvailable1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckAvailable1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckAvailable(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckAvailable:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      // array does not exist, is not an array, or is empty\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIdsAvailable:\", tokenIds, \", tokenIdsString1:\", tokenIdsString1);\n    tokenIDsForSalesSet(tokenIds);\n    tokenIDsStrSoldSet(tokenIdsString1);\n  }\n  function hasNumber(myString) {\n    return /\\d/.test(myString);\n  }\n\n  let networkId = 0;\n  if (compo === undefined || compo.length !== 4) {\n    log1(\"compo failed\", compo);\n    networkId = 0\n  } else {\n    networkId = compo[2];\n  }\n    // if (typeof rewardsStates !== \"undefined\") {\n    //   //checking reading from smart contracts\n    // }\n\n  return (\n    <div className=\"App\">\n      <EthereumContext.Provider value={compo}>\n      <h1>Freedom Reserve Limited Edition Coins</h1>\n        <h3>current network: {networkId === 0? \"Please use WEB3 browser and choose correct network\":networkId}, Network ID: {networkId===Number(config.contractPair)?\"Ok\":\"Incorrect Network\"}</h3>\n        <h3>current address: {compo[1]}</h3>\n\n        <br></br>\n        <Form onSubmit={BalanceOf1} >\n          <Button\n            content=\"BalanceOf\"\n            color='green'\n          />\n          <Label size={'huge'}>{nftBalance} Freedom Reserve NFT</Label>\n        </Form>\n\n        <br></br>\n        <Form onSubmit={CheckUser1} >\n          <Button\n            content=\"Check User's Token IDs\"\n            color='green'\n          />\n          <Label size={'huge'}>{tokenIDsString}</Label>\n        </Form>\n\n        <br></br>\n        <Directory rowNum={1} tokenIDs={tokenIDsForSales} />\n        <Directory rowNum={2} tokenIDs={tokenIDsForSales} />\n\n        <br></br>\n        <div className=\"para2\" >\n        <h3>These coins commemorate the founding of Freedom Reserve.</h3>\n        <h3>The special powers they confer on their holders will be revealed soon.</h3>\n\n        <h3>(All funds raised go towards an exchange listing for Freedom Reserve.)\n        </h3>\n        <br></br>\n        <h3>Copyright 2021 Freedom Reserve. All rights reserved</h3>\n        </div>\n\n      </EthereumContext.Provider>\n    </div>\n  );\n  \n}\n\nexport default App;\n/**\n          <br></br>\n          <Form error={!!errMsg}>\n            <Message error header=\"Error\" content={errMsg} />\n            <Button color=\"orange\" loading={loading} content=\"setGasPrice\" />\n            <Input\n              label=\"unit in GWei\"\n              labelPosition=\"right\"\n              placeholder=\"gas price\"\n              value={gasPrice}\n              onChange={(event) => {\n                setGasPrice(event.target.value);\n                //checkNumeric(event.target.value, \"gasPrice\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"setGasLimit\" />\n            <Input\n              label=\"unit in Wei\"\n              labelPosition=\"right\"\n              placeholder=\"gas limit\"\n              value={gasLimit}\n              onChange={(event) => {\n                setGasLimit(event.target.value);\n                //checkNumeric(event.target.value, \"gasLimit\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"userAddr\" />\n            <Input\n              label=\"\"\n              labelPosition=\"right\"\n              placeholder=\"0x...\"\n              value={userAddr}\n              onChange={(event) => {\n                userAddrSet(event.target.value);\n              }}\n            />\n          </Form>\n\n          <Label>gasPrice: {0}</Label>\n\n\n<div>\n    <ArrayObjects arrayInputs={rewardsDB} />\n  </div> \n\n  <br></br>\n  <Header />\n  <Label size={'huge'}> Under Construction </Label>\n*/\n  // const getCurrentAccount = async (event) => {\n  //   event.preventDefault();\n  //   log1(\"---------== getCurrentAccount()\");\n  //   log1(\"account[0]:\", compo[1]);\n  //   const out = checkNetwork(); \n  //   log1(\"out:\", out.isOk, out.chainId)\n  //   return true;\n  // };\n\n  //-------------------==\n  //const [Approve1Va1, Approve1SetVa1] = useState(\"\");\n  //const [Approve1ErrMsg, Approve1SetErrMsg]= useState(\"\");\n\n\n  // const ArrayObjects = ({ arrayInputs }) => (\n  //   <div>\n  //     {arrayInputs.map((item) => (\n  //       <div className=\"item\" key={item.id}>\n  //         id:{item.id}, rewards: {item.reward}, timestamp: {item.updatedAt}\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  //-------------------==\n  // const checkNumeric = (inputValue, inputSource) => {\n  //   log1(\"checkNumeric\", inputValue);\n  //   if (inputValue === \"\" || inputValue < 0 || isNaN(inputValue)) {\n  //     const errMsg =\n  //       \"input error@ \" +\n  //       inputSource +\n  //       \": amount cannot be empty, zero, negative, or non-numeric\";\n  //     console.warn(errMsg);\n  //     showErr(inputSource, errMsg);\n  //     return false;\n  //   } else {\n  //     log1(\"checkNumeric Ok\");\n  //     clearErr(inputSource);\n  //     return true;\n  //   }\n  // };\n  // const showErr = (inputSource, errMsg) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     default:\n  //       console.warn(\"showErr: no matched inputSource\");\n  //   }\n  // };\n  // const clearErr = (inputSource) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     default:\n  //       console.warn(\"clearErr: no matched inputSource\");\n  //   }\n  // };\n\n  // const handleDropdownAssetName = (e, { value }) => {\n  //   log1(\"assetNameDropdown value:\", value);\n  //   //assetNameSet(value);\n  // };\n  // const handleDBDropdown = (e, { value }) => {\n  //   log1(\"DBDropdown value:\", value);\n  //   //outcomeSet(value);\n  // };","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './components/header/header';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Header />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}