{"version":3,"sources":["ethereum/config.js","ethereum/ethFunc.js","ethereum/store.js","ethereumContext.js","components/menu-item/menu-item.js","components/directory/directory.js","assets/crown.svg","App.js","index.js"],"names":["config","infuraProvider","ethNodeURL0","ethNodeURL1","ethNodeURL4","ethNodeURL42","gasDataSource","password","DBID","serverNumer","isProduction","gasPrice","gasLimit","server0","server1","defaultUserChoice","user1","user2","recordsPerPage","contractPair","NFT721Creature_rinkeby","NFT721Sales_rinkeby","ERC20_FR_rinkeby","NFT721Creature_xDAI_0","NFT721Sales_xDAI_0","ERC20_FR_xDAI_0","NFT721Creature_xDAI_1","NFT721Sales_xDAI_1","ERC20_FR_xDAI_1","items","title","imageUrlFake","imageUrl","size","id","linkUrl","log1","console","log","extractCompo","compo","ctrtNum","acctIdx","a","undefined","error","length","instContracts","instNFT721Creature","instNFT721Sales","instTokenFR","Number","isInteger","parseInt","acct0","getEthNodeURL","Promise","resolve","reject","num","getCtrtAddresses","getInitWeb3","window","addEventListener","detectEthereumProvider","provider","web3","Web3","request","method","catch","err","warn","selectedAddress","ethNodeURL","providers","HttpProvider","init","version","currentProvider","isMetaMask","mesg","eth","getAccounts","accounts","Array","isArray","chainId","ethereum","addrNFT721Creature","addrNFT721Sales","Contract","NFT721Creature","abi","NFT721Sales","BalanceOf","methods","balanceOf","call","balance","CheckUser","checkOwner","CheckUserResult","CheckAvailable","checkAvailableResult","isTokenAvailable","tokenId","addrFrom","exists","isExisting","ownerOf","tokenOwner","isNotOwned","buyNFTViaETH","priceInWeiETH","send","from","value","gas","on","receipt","JSON","stringify","transactionHash","React","createContext","withRouter","tokenIDs","history","match","data1","useContext","EthereumContext","isAvailable","replace","includes","ItemLabel1","ItemStyle","buyNFTViaETH1","event","preventDefault","location","reload","className","onClick","e","style","backgroundImage","toUpperCase","Directory","rowNum","slice","map","otherProps","App","autoRefreshOnNetworkChange","userAddrDefault","gasPriceDefault","gasLimitDefault","useState","setCompo","nftBalance","nftBalanceSet","tokenIDsSet","tokenIDsForSales","tokenIDsForSalesSet","tokenIDsString","tokenIDsStringSet","tokenIDsStrSoldSet","useEffect","compo1","isMetaMask2","prevCompo","initAction","run","BalanceOf1","CheckUser1","CheckAvailable1","tokenIds","tokenIdsString1","forEach","item","idx","push","hasNumber","toString","myString","test","Provider","Form","onSubmit","Button","content","primary","Label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19fbe1ca.chunk.js","sourcesContent":["/*config ...\n@type: Configuration\n@brief ... \n\n//-------------== To Deploy\nFor Production:  serverNumber to 1\n\nElse: Set serverNumber = 0\n\nThen push\n//-------------==\nmanual push: copy ethereum192x192.png into repo\n\nerc20TokenAddress: '',\n\n@author Raymond Lieu\n@date   2020-12-23\n*/\nexport const config = {\n  infuraProvider:\n    \"https://eth-mainnet.alchemyapi.io/v2/k2--UTxxx\",\n  ethNodeURL0: \"\",\n  ethNodeURL1: \"https://mainnet.infura.io/v3/75df2\",\n  ethNodeURL4: \"https://rinkeby.infura.io/v3/75d\",\n  ethNodeURL42: \"https://kovan.infura.io/v3/75d\",\n  gasDataSource:\n    \"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=xyz\",\n  password: \"abc123\",\n  DBID: 0,\n  serverNumer: 1,\n  isProduction: 1,\n  gasPrice: 155,\n  gasLimit: 1000000,\n  server0: \"http://localhost:3000\",\n  server1: \"https://google.com\",\n  defaultUserChoice: 2,\n  user1: \"\",\n  user2: \"0xF694dCbec7f434dE9F892cfACF0449DB8661334D\",\n  recordsPerPage: 3,\n  contractPair: 4,\n  NFT721Creature_rinkeby: \"0xa8e5142885Ec751fA9CE34a32E6a978DEaC22C8e\",\n  NFT721Sales_rinkeby: \"0x8Ace2c3Cc2e4657312b0B19F51a402Ffc74f9c1a\",\n  ERC20_FR_rinkeby: \"\",\n  NFT721Creature_xDAI_0: \"0xEf169fbA14000463C9A9747C6Ab39750CaeBA440\",\n  NFT721Sales_xDAI_0: \"0xc2153D539cE9778e7011BdC5bA7E56aE8F87d22e\",\n  ERC20_FR_xDAI_0: \"\",\n  NFT721Creature_xDAI_1: \"\",\n  NFT721Sales_xDAI_1: \"\",\n  ERC20_FR_xDAI_1: \"0x270DE58F54649608D316fAa795a9941b355A2Bd0\",\n};\nexport const items = [\n  {\n    title: '# 01',\n    imageUrlFake: '',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiahy2ednf4l2eak4voxoskuqrqh4pnqewxx4f2n6x7jsw6w2ic3gi',\n    size: 'small',\n    id: 1,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 02',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeihxphm3msrktv23s5yuhsct7bvmvic75sifa2oa3mbct3optnggwu',\n    size: 'small',\n    id: 2,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 03',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeib5a36m6dzk7ivztqgmhhzlgtjx2eulvtbxm6all7xe3hmppkuoae',\n    size: 'small',\n    id: 3,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 04',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeibebbfxvxkkxuaei7emgb4vmngykkbq7gnxy2muwb6e7653uvdlfi',\n    size: 'small',\n    id: 4,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 05',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiekfwtnovtiz7zu5haq7t6vhyzno3lqurwehsprcvi3gho6fema2e',\n    size: 'small',\n    id: 5,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 06',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fttxvo74eik62otd2wy6d6zty5wwig7ocb6waqvl6tfrwb2sze',\n    size: 'small',\n    id: 6,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 07',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeic6l4dehe3usvf25wmd5muzux2mfpe4pjapgir4cmyk43tmin6dei',\n    size: 'small',\n    id: 7,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 08',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifw7vgtgjdcuzfuhhorwp536z34tfsxv3ygetfa42ocbxnxycoxcu',\n    size: 'small',\n    id: 8,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 09',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifuhh42leyt63cfsvrygygrojnlqwvo5676n5x43lhyvstffc5slq',\n    size: 'small',\n    id: 9,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 10',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fibnfg7qiblfa7bkovljjp3755fpkdfhlxfcbciduu7nndjfze',\n    size: 'small',\n    id: 10,\n    linkUrl: 'shop/mens'\n  }\n];\n\nexport const dbSelections = [\n  {\n    key: \"0\",\n    text: \"Dev1 DB\",\n    value: \"0\",\n  },\n  {\n    key: \"1\",\n    text: \"Prod1 DB\",\n    value: \"1\",\n  },\n];\n\n","import detectEthereumProvider from '@metamask/detect-provider'\nimport { ethers, BigNumber} from \"ethers\"; //BigNumber\nimport Web3 from \"web3\";\nimport { config } from \"../ethereum/config\";\n//import ERC20Token from \"./ERC20Token.json\";\nimport NFT721Creature from \"./NFT721Creature.json\";\nimport NFT721Sales from \"./NFT721Sales.json\";\n//import ERC20TokenFR from \"./ERC20TokenFR.json\";\n\n//import { rewardsCtrtIdxes, dbSelections } from \"./config\";\n// const instance = new web3.eth.Contract(\n//     JSON.parse(NFTokenMetadataEnumerable.interface),\n//     '0xe6Da20c6F3ba3ac86C7FA3da155E5847F3cDE7e6'\n// );\n// export default instance;\n//--------------------------== utils\nexport const log1 = console.log;\n//const bigNum = (item) => BigNumber.from(item);\n\n//const dp = 18;\n//const base = bigNum(10).pow(dp);\n//const SECONDS_IN_A_DAY = 86400;\n//const one1 = constants.One;\n//const bnOne = bigNum(one1);\n//const MAX_INTEGER = new bigNum(2).pow(new bigNum(256)).sub(new bigNum(1));\n//const OptionType = { Put: 1, Call: 2 };\nexport const addr0 = \"0x0000000000000000000000000000000000000000\";\n\n//const amp = 1000000;\nexport const GWEI = 1000000000;\n\nexport const fromWeiE = (weiAmount, dp = 18) => {\n  try {\n    return ethers.utils.formatUnits(weiAmount, parseInt(dp));\n  } catch (err) {\n    console.error(\"fromWeiE() failed:\", err);\n    return -1;\n  }\n}//input: BN or string, dp = 6 or 18 number, output: string\n\nexport const toWeiE = (amount, dp = 18) => {\n  try {\n    return ethers.utils.parseUnits(amount, parseInt(dp));\n  } catch (err) {\n    console.error(\"toWeiE() failed:\", err);\n    return -1;\n  }\n}//input: string, output: Bn\n\nexport const fromWei = (weiAmount) => fromWeiE(weiAmount);\n//web3.utils.fromWei(weiAmount.toString(), \"ether\");\n\nexport const toWei = (amount) => toWeiE(amount);\n//web3.utils.toWei(amount.toString(), \"ether\");\n\n//--------------------------== \nexport const getTokenBalance = async (compo, userAddr) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== getTokenBalance()\");\n  const [instERC20TokenFR, acct0] = await extractCompo(compo, 2, 0);\n\n  if (instERC20TokenFR === undefined || acct0 === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = acct0;\n    console.log(\"using default accounts[0]\");\n  }\n  console.log(\"userAddr:\", userAddr);\n  try {\n    const data = await instERC20TokenFR.methods.balanceOf(userAddr).call();\n    console.log(\"data:\", data);\n      resolve(data);\n  } catch (err) {\n    console.error(\"getTokenBalance() failed.\", err);\n    reject(-1);\n  }\n});\n//--------------------------==\nexport const extractCompo = async(compo, ctrtNum, acctIdx) => {\n  //log1(\"compo:\", compo);\n  if (compo === undefined) {\n    console.error(\"compo is undefined\");\n    return [-1];\n  }\n  if (ctrtNum === undefined) {\n    console.error(\"ctrtNum is undefined\");\n    return [-1];\n  }\n  if(compo.length < 2){\n    console.error(\"compo is not complete\");\n    return [-1];\n  }\n  const instContracts = compo[3];\n  if(instContracts === undefined){\n    console.error(\"instContracts undefined\")\n  } else if(instContracts.length < 2){\n    console.error(\"instContracts length is less than 3\")\n  }\n  const instNFT721Creature = instContracts[0];\n  const instNFT721Sales = instContracts[1];\n  const instTokenFR = \"\";//instContracts[2];\n  if(Number.isInteger(acctIdx) && parseInt(Number(acctIdx)) >= 0) {\n    //const addr1 = await getAccounts(compo[0]);\n    const acct0 = compo[1][acctIdx];\n    //console.log(\"acct0:\", acct0);\n\n    if(ctrtNum === 2) {\n      return [instTokenFR, acct0];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales, acct0];\n    } else {\n      return [instNFT721Creature, acct0];\n    }\n  } else {\n    if(ctrtNum === 2) {\n      return [instTokenFR];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales];\n    } else {\n      return [instNFT721Creature];\n    }\n  }\n}\n\nexport const func = async (compo) =>\nnew Promise(async (resolve, reject) => {\nresolve(-1);\n});\n\n//let stakedAmount  = fromWeiE(weiAmount, dp);\n\n// const err1 = checkDropdown(network1, rewardsCtrtIndex);\n  // if (err1) {\n  //   reject(err1);\n  // }\n\n//---------------------== utility function\nconst getEthNodeURL = async () =>\n  new Promise(async (resolve, reject) => {\n    const num = config.contractPair;\n    if (num === 1) {\n      resolve(config.ethNodeURL1);\n    } else if (num === 4) {\n      resolve(config.ethNodeURL4);\n    } else if (num === 42) {\n      resolve(config.ethNodeURL42);\n    } else {\n      console.error(\"ethNodeNumber is invalid\");\n      reject(\"ethNodeNumber is invalid\");\n    }\n  });\n\nexport const getGasData = async () =>\n  new Promise(async (resolve, reject) => {\n    log1(\"---------== getGasData()\");\n    const url = config.gasDataSource;\n    const isToAcceptOpaqueRes = false;\n    const response = await fetch(url).catch((err) => {\n      log1(\"err@ fetch:\", err);\n      reject(false);\n    });\n    log1(\"response:\", response);\n    if (response && response.ok) {\n      let resObj = await response.json();\n      log1(\"resObj:\", resObj);\n      const gasPriceNew = resObj.result.ProposeGasPrice;\n      log1(\"ProposeGasPrice:\", gasPriceNew);\n      resolve(gasPriceNew);\n    } else if (isToAcceptOpaqueRes) {\n      let data = await response.text();\n      log1(\"data:\", data);\n      resolve(data ? JSON.parse(data) : {});\n    } else {\n      reject(false);\n    }\n  });\n\n\n  //--------------------------==\nexport const getProviderSigner = async () => \nnew Promise((resolve, reject) => {\n  window.addEventListener(\"load\", async () => {\n    // wait for loading completion to avoid race condition with web3 injecting timing\n    if (window.ethereum) {\n      //new version of MetaMask exists\n      log1(\"newer ehereum detected\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    } else {\n      const ethNodeURL = await getEthNodeURL().catch((err) => {\n        reject(err);\n      });\n      log1(\"using ethNodeURL:\", ethNodeURL);\n      const provider = new ethers.providers.JsonRpcProvider(ethNodeURL);\n      log1(\"no ethereum injected. Use infura endpoint\");\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    }\n  });\n});\n\nexport const getCtrtAddresses = async () =>\nnew Promise(async (resolve, reject) => {\n  const num = config.contractPair;\n  let ctrtAddrs;\n  if (num === 77) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_0, config.NFT721Sales_xDAI_0];\n    resolve(ctrtAddrs);\n  } else if (num === 100) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_1, config.NFT721Sales_xDAI_1];\n    resolve(ctrtAddrs);\n  } else if (num === 4) {\n    ctrtAddrs = [config.NFT721Creature_rinkeby, config.NFT721Sales_rinkeby];\n    resolve(ctrtAddrs);\n  } else {\n    console.error(\"contractPair is invalid\");\n    reject(\"contractPair is invalid\");\n  }\n});\n\nexport const getInitWeb3 = async () =>\n  new Promise((resolve, reject) => {\n    window.addEventListener(\"load\", async () => {\n      // this addEventListener is only needed if you run this getInitWeb3 when the website loads up... wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    });\n  });\n  \nexport const getWeb3 = async () =>\n  new Promise(async(resolve, reject) => {\n    //window.addEventListener(\"load\", async () => {\n      // wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    //});\n  });\n\nexport const init = async () =>\n  new Promise(async (resolve, reject) => {\n    let mesg;\n    console.log(\"init()\");\n    try {\n      //const web3 = await getInitWeb3().\n      const web3 = await getInitWeb3().catch((err) => {\n        reject(err);\n        return false;\n      });\n      if (typeof web3 === \"undefined\") {\n        log1(\"missing web3:\", web3, typeof web3);\n        reject(\"missing web3\");\n        return false;\n      }\n      log1(\"web3 version:\", web3.version);\n\n      const isMetaMask = await web3.currentProvider.isMetaMask;\n      log1(\"isMetaMask\", isMetaMask);\n      if (!isMetaMask) {\n        mesg = \"Please install MetaMask browser extension\";\n        log1(mesg);\n        reject(mesg);\n        return false;\n      }\n\n      const accounts = await web3.eth.getAccounts();\n      // const networkId = await web3.eth.net.getId();\n      // const deployedNetwork = ctrtX.networks[networkId];\n      if (!Array.isArray(accounts) || accounts.length === 0) {\n        mesg = \"missing accounts\";\n        log1(\n          \"missing accounts:\",\n          accounts,\n          Array.isArray(accounts),\n          accounts.length\n        );\n        reject(mesg);\n        return false;\n      }\n      if (accounts[0] === undefined) {\n        mesg = \"Please login to MetaMask(ETH wallet)\";\n        log1(mesg);\n        reject(mesg);\n        return false;\n      }\n      console.log(\"accounts:\", accounts);\n\n      const chainId = parseInt(window.ethereum.chainId, 16);\n      console.log(\"chainId:\", chainId);\n      if(chainId === 77){\n        log1(\"chainId 77 for xDai Testnet detected\");\n      } else if(chainId === 1){\n        log1(\"chainId 1 for Ethereum Mainnet detected\");\n      } else if(chainId === 4){\n        log1(\"chainId 4 for Ethereum Rinkeby detected\");\n      } else {\n        mesg = \"chainId invalid\";\n        reject(mesg);\n        return false;\n      }\n\n      const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n      console.log(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n\n      const instNFT721Creature = new web3.eth.Contract(\n        NFT721Creature.abi,\n        addrNFT721Creature\n      );\n      if (typeof instNFT721Creature === \"undefined\") {\n        log1(\"missing instNFT721Creature:\", instNFT721Creature);\n        reject(\"missing instNFT721Creature\");\n        return false;\n      }\n\n      const instNFT721Sales = new web3.eth.Contract(\n        NFT721Sales.abi,\n        addrNFT721Sales\n      );\n      if (typeof instNFT721Sales === \"undefined\") {\n        log1(\"missing instNFT721Sales:\", instNFT721Sales);\n        reject(\"missing instNFT721Sales\");\n        return false;\n      }\n\n      const instContracts = [\n        instNFT721Creature, instNFT721Sales\n      ];\n\n      log1(\"init is successful\");\n      resolve([web3, accounts, chainId, instContracts]);\n    } catch (error) {\n      log1(error);\n      reject(\"init failed\");\n    }\n  });\n\n\n/**\n      const instERC20 = new web3.eth.Contract(\n        ERC20Token.abi,\n        config.erc20TokenAddress\n      ); //deployedNetwork && deployedNetwork.address,\n      if (typeof instERC20 === \"undefined\") {\n        log1(\"missing instERC20:\", instERC20);\n        reject(\"missing instERC20\");\n      }\n\nconst getERC20CtrtStates = async (web3, addr, instERC20) =>\n  new Promise(async (resolve, reject) => {\n    try {\n      log1(\"instERC20:\", instERC20);\n      const name = \"\"; //await instERC20.methods.name().call();\n      const symbol = \"\"; //await instERC20.methods.symbol().call();\n      const decimals = \"\"; //await instERC20.methods.decimals().call();\n      const version = \"\"; //await instERC20.methods.version().call();\n      const totalSupply = \"\"; //await instERC20.methods.totalSupply().call();\n\n      const weiAmount = await instERC20.methods.balanceOf(addr).call();\n      const usrAmount = web3.utils.fromWei(weiAmount, \"ether\");\n      log1(\"addr balance:\", usrAmount);\n      resolve([usrAmount, name, symbol, decimals, version, totalSupply]);\n    } catch (error) {\n      log1(error);\n      reject(\"getERC20CtrtStates failed\");\n    }\n  });\n\n  */\n","import { ethers, BigNumber} from \"ethers\"; //BigNumber\nimport { config } from \"./config\";\nimport {extractCompo, toWei, fromWei, GWEI, addr0, getCtrtAddresses} from \"./ethFunc\";\n\n//--------------------------==\nconst recordsPerPage = config.recordsPerPage;\n\nlet option = 0, bool1 = false, uintNum = 0;\n\n//--------------------------== initAction()\n/** should be run once and save compo1 into a state variable for all other functions to use\n\n*/\n//--------------------------==\nexport const ReadFunc = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== ReadFunc()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const data = await instNFT721Creature.methods.name().call();\n    console.log(\"data:\", data);\n    resolve(data);\n  } catch (err) {\n    console.error(\"ReadFunc() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const BalanceOf = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== BalanceOf()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const balance = await instNFT721Creature.methods.balanceOf(acct0).call();\n    console.log(\"balance:\", balance);\n    resolve(balance);\n  } catch (err) {\n    console.error(\"BalanceOf() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckUser = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== CheckUser()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n\n  try {\n    const CheckUserResult = await instNFT721Creature.methods.checkOwner(acct0).call();\n    console.log(\"CheckUserResult:\", CheckUserResult);\n    resolve(CheckUserResult);\n  } catch (err) {\n    console.error(\"CheckUser() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckAvailable = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== CheckAvailable()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n  console.log(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n  try {\n    const checkAvailableResult = await instNFT721Creature.methods.checkOwner(addrNFT721Sales).call();\n    console.log(\"checkAvailableResult:\", checkAvailableResult);\n    resolve(checkAvailableResult);\n  } catch (err) {\n    console.error(\"CheckAvailable() failed.\", err);\n    reject(-1);\n  }\n});\n\n\nexport const GetXYZ = async (compo, userAddr, option) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== GetXYZ()\");\n  const [instNFT721Creature, acct0] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined || acct0 === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = acct0;\n    console.log(\"using default accounts[0]\");\n  }\n  console.log(\"userAddr:\", userAddr);\n  try {\n    const data = await instNFT721Creature.methods.betters(userAddr).call();\n    console.log(\"data:\", data);\n    if(option === 0){\n      resolve(data.deposit);\n    } else if(option === 1){\n      resolve(data.balance);\n    } else if(option === 2){\n      resolve(data.winloss);\n    } else {\n      resolve(data);\n    }\n  } catch (err) {\n    console.error(\"GetXYZ() failed.\", err);\n    reject(-1);\n  }\n});\n\n\n//-------------==\nexport const isTokenAvailable = async (compo, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== isTokenAvailable()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n\n  const isExisting = await instNFT721Creature.methods.exists(tokenId).call();\n  const tokenOwner = await instNFT721Creature.methods.ownerOf(tokenId).call();\n  const isNotOwned = tokenOwner !== addrFrom;\n  console.log(\"isExisting:\", isExisting, \", isNotOwned:\", isNotOwned);\n  resolve(isExisting && isNotOwned);\n});\n\nexport const buyNFTViaETH = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== buyNFTViaETH()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      // const addrNFTContract = await instNFT721Sales.methods.addrNFTContract().call();\n      // console.log(\"addrNFTContract:\",addrNFTContract );\n      const isAvailable = await isTokenAvailable(compo, tokenId);\n      if(!isAvailable){\n        console.log(\"tokenId not available\");\n        reject(\"tokenId not available\");\n        return false;\n      }\n\n      const priceInWeiETH = await instNFT721Sales.methods.priceInWeiETH().call();\n      //const value1 = web3.utils.toWei('0.1', \"ether\");\n\n      console.log(\"addrFrom:\", addrFrom, \", gasPrice:\", gasPrice, \", gasLimit:\", gasLimit, tokenId, priceInWeiETH, typeof priceInWeiETH );\n    \n      await instNFT721Sales.methods\n        .buyNFTViaETH(tokenId)\n        .send({\n          from: addrFrom,\n          value: priceInWeiETH,\n          gasPrice: gasPrice * GWEI,\n          gas: gasLimit,\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          resolve(receipt.transactionHash);\n        })\n        .on(\"error\", (err, receipt) => {\n          console.error(\"txn failed:\", err);\n          reject(err);\n          return false;\n        });\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\nexport const buyNFTViaETHCheck = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  console.log(\"---------== buyNFTViaETHCheck()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  console.log(\"addrFrom:\", addrFrom, gasPrice, gasLimit, tokenId);\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      const result = await instNFT721Sales.methods\n        .BuyNFTViaETHCheck(tokenId)\n        .call({from: addrFrom});\n        resolve(result);\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n","import React from \"react\";\nexport default React.createContext(undefined);","import React, { useContext } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Form, Button, Input, Label, Message, Dropdown,\n  Grid, } from \"semantic-ui-react\";\nimport EthereumContext from \"../../ethereumContext\"; //no {}\nimport { withRouter } from 'react-router-dom';\nimport './menu-item.scss';\nimport {config} from '../../ethereum/config';\nimport { ReadFunc, buyNFTViaETH, buyNFTViaETHCheck, BalanceOf } from '../../ethereum/store';\n\nconst MenuItem = ({title, imageUrl, size, history, tokenIDs, match}) => {\n  console.log(\"---------== MenuItem\")\n  const compo = useContext(EthereumContext);\n  let data1, isAvailable = false;\n\n  const tokenId = parseInt(title.replace(\"# \", \"\"));\n  if(Array.isArray(tokenIDs) && tokenIDs.length > 0){\n    console.log(\"tokenIDs exist\");\n    isAvailable  = tokenIDs.includes(tokenId);\n  }\n  console.log(\"tokenId:\", tokenId, \", isAvailable:\", isAvailable);\n  \n  const ItemLabel1 = (isAvailable)?\"BUY NOW\":\"Sold Out\";\n  const ItemStyle = (isAvailable)?\"BUYNOW\":\"SoldOut\";\n\n  if (config.isProduction !== 1) {\n    imageUrl = \"/img/3dgold1.png\";\n  }\n  const buyNFTViaETH1 = async (event) => {\n    event.preventDefault();\n    console.log(\"---------== buyNFTViaETH1():\", title);\n    // setLoading(true);\n    // setErrMsg(\"\");\n    if(isAvailable){\n      const gasPrice = config.gasPrice;\n      const gasLimit = config.gasLimit;\n  \n      data1 = await buyNFTViaETH(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n        //setErrMsg(\"buyNFTViaETH1 failed\");\n        return false;\n      });\n      console.log(\"txHash:\", data1);\n      window.location.reload();\n    } else {\n      console.log(\"already sold\")\n    }\n  }\n  \n  return (\n    <div \n      className={`${size} menu-item`} //dynamic classname\n      onClick={(e)=> {\n        console.log(\"clicked\", title);\n        buyNFTViaETH1(e);\n        }}\n      >\n      \n      <div className='background-image' \n      style={{backgroundImage: `url(${imageUrl})`  }} />\n\n      <div className='content'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <span className={`${ItemStyle} subtitle`} >{ItemLabel1}</span>\n      </div>\n\n    </div>\n  );\n}\n//export default (MenuItem);\nexport default withRouter(MenuItem);\n/**\n  onClick={()=> history.push(`${match.url}${linkUrl}`)\n  \n      <CustomButton onClick={()=> console.log(\"clicked\")} inverted>\n        Add to cart </CustomButton>\n\n<div className='content'>\n      <h1 className='title'>{title.toUpperCase()}</h1>\n      <span className='subtitle'>SHOP NOW</span>\n    </div>\n */","import React from 'react';\n\nimport MenuItem from '../menu-item/menu-item';\nimport {items} from '../../ethereum/config';\n\nconst Directory = ({rowNum, tokenIDs}) =>  {\n  console.log(\"---------== Directory \\nrowNum:\", rowNum, \", tokenIDs:\", tokenIDs);\n  if (!Array.isArray(tokenIDs) || !tokenIDs.length) {\n    console.log(\"tokenIDs: not an array or is empty\")\n    return (\n      <div className='directory-menu'>No tokenIDs</div>\n    );\n  } else if(rowNum === 1) {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(0, 5).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs}/>\n        ))\n      }\n      </div>\n    );\n  } else {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(5, 10).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs} />\n        ))\n      }\n      </div>\n    );\n  }\n}\n\nexport default Directory;\n/**------------==\n        this.state.sections.map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} />\n        ))\n***------------==\n        this.state.sections.map(({id, title, imageUrl, id, size, linkUrl}) => (\n          <MenuItem key={id} title={title} imageUrl={imageUrl} size={size}\n*/","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"WiP\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Artboard\",\n  transform: \"translate(-90.000000, -38.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(90.000000, 38.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Rectangle\",\n  fill: \"#808282\",\n  points: \"3 14 25 26.5 47 14 40.855176 39 9.08421785 39\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Triangle\",\n  fillOpacity: 0.262838724,\n  fill: \"#101A1A\",\n  points: \"25 8 40 39 10 39\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 2,\n  cy: 9,\n  r: 2\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 25,\n  cy: 2,\n  r: 2\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  fill: \"#5E6363\",\n  cx: 48,\n  cy: 9,\n  r: 2\n}))));\n\nfunction SvgCrown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"50px\",\n    height: \"39px\",\n    viewBox: \"0 0 50 39\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrown);\nexport default __webpack_public_path__ + \"static/media/crown.3a4e2b15.svg\";\nexport { ForwardRef as ReactComponent };","import \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Input, Label, Message, } from \"semantic-ui-react\";\n//Card, Header, Segment, GridRow, Dropdown, Grid, \n\n//import { DropDownRewardsCtrts } from \"./dropdown\";\nimport {init, log1, } from \"./ethereum/ethFunc\";//getGasData, getERC20Balance, fromWei, checkNetwork, getNFTBalance, \nimport { config } from \"./ethereum/config\";//rewardsCtrtIdxes, dbSelections, assetNames, outcomes, \nimport {BalanceOf, CheckUser, CheckAvailable } from \"./ethereum/store\";\n\nimport Directory from './components/directory/directory';\nimport Header from './components/header/header';\n\n/**\nTo add a function: duplicate App function, errMsg, UI, store function(Ethereum function), replace from red part in App.js\n*/\nimport EthereumContext from \"./ethereumContext\"; //no {}\n//import ChildComponent from \"./ChildComponent\";\n\nimport './homepage.scss';\n\nfunction App() {\n  if(window.ethereum) window.ethereum.autoRefreshOnNetworkChange = false;\n\n  const gasPriceDefault = config.gasPriceDefault;//1 GWei\n  const gasLimitDefault = config.gasLimitDefault;//1000000\n  const [compo, setCompo] = useState([]);\n\n  const [gasPrice, setGasPrice] = useState(gasPriceDefault);\n  const [gasLimit, setGasLimit] = useState(gasLimitDefault);\n  const [loading, setLoading] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const userChoice = config.defaultUserChoice;\n  let userAddrDefault;\n  if(userChoice === 1) {\n    userAddrDefault = config.user1;\n  } else {\n    userAddrDefault = config.user2;\n  }\n  const [userAddr, userAddrSet] = useState(userAddrDefault);\n\n  const [nftBalance, nftBalanceSet] = useState(-1);\n  const [tokenIDs, tokenIDsSet] = useState([]);\n  const [tokenIDsForSales, tokenIDsForSalesSet] = useState([]);\n  const [tokenIDsString, tokenIDsStringSet] = useState(\"\");\n  const [tokenIDsStrSold, tokenIDsStrSoldSet] = useState(\"\");\n\n  useEffect(() => {\n    //cannot add async here, so make async below\n    const initAction = async () => {\n      const compo1 = await init().catch((err) => {\n        console.error(`initAction failed: ${err}`);\n        //alert(`initialization failed`);\n        return;\n      });\n      //log1(\"compo1 length:\", compo1.length)\n      // await BalanceOf1();\n      // await CheckUser1();\n      // await CheckAvailable1();\n      setCompo(compo1);\n\n      if(!window.ethereum){\n        console.error(\"window.ethereum does not exist\")\n        return;\n      }\n      const provider = window.ethereum;\n      const isMetaMask2 = provider.isMetaMask;\n      log1(\"isMetaMask2:\", isMetaMask2);\n      \n      provider.on('accountsChanged', (accounts) =>{\n        log1(\"accountsChanged:\", accounts);\n        if(accounts.length === 0){\n          console.error(\"accounts are empty\");\n        }\n        setCompo(prevCompo => [prevCompo[0], accounts, prevCompo[2], prevCompo[3]]);\n      });\n      \n      provider.on('chainChanged', (chainId) => {\n        log1(\"App chainId:\", chainId);\n        // Handle the new chain.\n        // Correctly handling chain changes can be complicated.\n        // We recommend reloading the page unless you have good reason not to.\n        window.location.reload();\n      });\n    };\n    initAction();\n  }, []); //[] for running once\n\n  //wait for all requirements are populated: load initial conditions\n  useEffect(() => {\n    const run = async () => {\n      log1(\"useEffect2: good\")\n      await BalanceOf1();\n      await CheckUser1();\n      await CheckAvailable1();\n    };\n    if (!Array.isArray(compo) || !compo.length) {\n      log1(\"useEffect2: is not an array, or is empty\")\n    } else {\n      run();\n    }\n  }, [compo]);\n\n  //const delayInMilliseconds = 5000; //1 second\n  // const showErrForDuration = async () => {\n  //   setTimeout(function () {\n  //     //your code to be executed after 1 second\n  //   }, delayInMilliseconds);\n  // };\n\n  const BalanceOf1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== BalanceOf1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await BalanceOf(compo).catch((err) => {\n      //setErrMsg(\"BalanceOf1 failed\");\n      return false;\n    });\n    nftBalanceSet(data1);\n  }\n\n  const CheckUser1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckUser1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckUser(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckUser:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      log1(\"is not an array, or is empty\")\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIds:\", tokenIds, tokenIdsString1);\n    tokenIDsSet(tokenIds);\n    tokenIDsStringSet(tokenIdsString1);\n  }\n\n  const CheckAvailable1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckAvailable1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckAvailable(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckAvailable:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      // array does not exist, is not an array, or is empty\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIdsAvailable:\", tokenIds, \", tokenIdsString1:\", tokenIdsString1);\n    tokenIDsForSalesSet(tokenIds);\n    tokenIDsStrSoldSet(tokenIdsString1);\n  }\n  function hasNumber(myString) {\n    return /\\d/.test(myString);\n  }\n\n  // const getCurrentAccount = async (event) => {\n  //   event.preventDefault();\n  //   log1(\"---------== getCurrentAccount()\");\n  //   log1(\"account[0]:\", compo[1]);\n  //   const out = checkNetwork(); \n  //   log1(\"out:\", out.isOk, out.chainId)\n  //   return true;\n  // };\n\n  //-------------------==\n  //const [Approve1Va1, Approve1SetVa1] = useState(\"\");\n  //const [Approve1ErrMsg, Approve1SetErrMsg]= useState(\"\");\n\n\n  // const ArrayObjects = ({ arrayInputs }) => (\n  //   <div>\n  //     {arrayInputs.map((item) => (\n  //       <div className=\"item\" key={item.id}>\n  //         id:{item.id}, rewards: {item.reward}, timestamp: {item.updatedAt}\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  //-------------------==\n  // const checkNumeric = (inputValue, inputSource) => {\n  //   log1(\"checkNumeric\", inputValue);\n  //   if (inputValue === \"\" || inputValue < 0 || isNaN(inputValue)) {\n  //     const errMsg =\n  //       \"input error@ \" +\n  //       inputSource +\n  //       \": amount cannot be empty, zero, negative, or non-numeric\";\n  //     console.warn(errMsg);\n  //     showErr(inputSource, errMsg);\n  //     return false;\n  //   } else {\n  //     log1(\"checkNumeric Ok\");\n  //     clearErr(inputSource);\n  //     return true;\n  //   }\n  // };\n  // const showErr = (inputSource, errMsg) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     default:\n  //       console.warn(\"showErr: no matched inputSource\");\n  //   }\n  // };\n  // const clearErr = (inputSource) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     default:\n  //       console.warn(\"clearErr: no matched inputSource\");\n  //   }\n  // };\n\n  // const handleDropdownAssetName = (e, { value }) => {\n  //   log1(\"assetNameDropdown value:\", value);\n  //   //assetNameSet(value);\n  // };\n  // const handleDBDropdown = (e, { value }) => {\n  //   log1(\"DBDropdown value:\", value);\n  //   //outcomeSet(value);\n  // };\n\n  if (compo === undefined || compo.length !== 4) {\n    log1(\"compo failed\", compo);\n    return <div>Loading web3, accounts, instances: Please use correct network</div>;\n  } else {\n    // if (typeof rewardsStates !== \"undefined\") {\n    //   //checking reading from smart contracts\n    // }\n\n    return (\n      <div className=\"App\">\n        <EthereumContext.Provider value={compo}>\n        <h1>Freedom Reserve Limited Edition Coins</h1>\n          <h3>current network: {compo[2]}, Network ID: {compo[2]===Number(config.contractPair)?\"Ok\":\"Incorrect Network\"}</h3>\n          <h3>current address: {compo[1]}</h3>\n\n          <h3>These coins commemorate the founding of Freedom Reserve.</h3>\n          <h3>The special powers they confer on their holders will be revealed soon.</h3>\n\n          <h3>(All funds raised go towards an exchange listing for Freedom Reserve.)\n          </h3>\n\n\n          <br></br>\n          <br></br>\n          <Form onSubmit={BalanceOf1} >\n            <Button\n              content=\"BalanceOf\"\n              primary\n            />\n            <Label size={'huge'}>{nftBalance} Freedom Reserve NFT</Label>\n          </Form>\n\n          <br></br>\n          <Form onSubmit={CheckUser1} >\n            <Button\n              content=\"Check User's Token IDs\"\n              primary\n            />\n            <Label size={'huge'}>{tokenIDsString}</Label>\n          </Form>\n\n          <br></br>\n          <Directory rowNum={1} tokenIDs={tokenIDsForSales} />\n          <Directory rowNum={2} tokenIDs={tokenIDsForSales} />\n\n        </EthereumContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/**\n          <br></br>\n          <Form error={!!errMsg}>\n            <Message error header=\"Error\" content={errMsg} />\n            <Button color=\"orange\" loading={loading} content=\"setGasPrice\" />\n            <Input\n              label=\"unit in GWei\"\n              labelPosition=\"right\"\n              placeholder=\"gas price\"\n              value={gasPrice}\n              onChange={(event) => {\n                setGasPrice(event.target.value);\n                //checkNumeric(event.target.value, \"gasPrice\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"setGasLimit\" />\n            <Input\n              label=\"unit in Wei\"\n              labelPosition=\"right\"\n              placeholder=\"gas limit\"\n              value={gasLimit}\n              onChange={(event) => {\n                setGasLimit(event.target.value);\n                //checkNumeric(event.target.value, \"gasLimit\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"userAddr\" />\n            <Input\n              label=\"\"\n              labelPosition=\"right\"\n              placeholder=\"0x...\"\n              value={userAddr}\n              onChange={(event) => {\n                userAddrSet(event.target.value);\n              }}\n            />\n          </Form>\n\n          <Label>gasPrice: {0}</Label>\n\n\n<div>\n    <ArrayObjects arrayInputs={rewardsDB} />\n  </div> \n\n  <br></br>\n  <Header />\n  <Label size={'huge'}> Under Construction </Label>\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}