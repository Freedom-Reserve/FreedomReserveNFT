{"version":3,"sources":["ethereum/config.js","ethereum/ethFunc.js","ethereum/store.js","ethereumContext.js","components/menu-item/menu-item.js","components/directory/directory.js","App.js","components/header/header.js","index.js"],"names":["config","items","title","imageUrlFake","imageUrl","size","id","linkUrl","assetSelections","key","text","value","log1","console","log","GWEI","fromWei","weiAmount","dp","ethers","utils","formatUnits","parseInt","err","error","fromWeiE","extractCompo","compo","ctrtNum","acctIdx","a","undefined","length","instContracts","instNFT721Creature","instNFT721Sales","instERC20Token","Number","isInteger","addrFrom","getEthNodeURL","Promise","resolve","reject","getGasData","url","isToAcceptOpaqueRes","fetch","catch","response","ok","json","resObj","gasPriceNew","result","ProposeGasPrice","data","JSON","parse","getCtrtAddresses","getInitWeb3","window","addEventListener","detectEthereumProvider","provider","web3","Web3","request","method","warn","selectedAddress","ethNodeURL","providers","HttpProvider","init","version","currentProvider","isMetaMask","mesg","eth","getAccounts","accounts","Array","isArray","chainId","isWindowEthereum","ethereum","addrNFT721Creature","addrNFT721Sales","Contract","NFT721Creature","abi","NFT721Sales","methods","token","call","addrERC20Token","instERC20","ERC20Token","getSalePrice","priceInWeiETH","priceInETHETH","BalanceOf","balanceOf","balance","CheckUser","checkOwner","CheckUserResult","CheckAvailable","checkAvailableResult","isTokenAvailable","tokenId","exists","isExisting","ownerOf","tokenOwner","isNotOwned","buyNFTViaETH","gasPrice","gasLimit","send","from","gas","on","receipt","stringify","transactionHash","buyNFTViaETHCheck","buyNFTViaToken","priceInWeiToken","allowance","isAllowed","approve","buyNFTViaERC20","BuyNFTViaETHCheck","React","createContext","withRouter","tokenIDs","history","match","data1","useContext","EthereumContext","isAvailable","replace","includes","ItemLabel1","ItemStyle","buyNFTViaETH1","alert","location","reload","buyNFT","event","preventDefault","buyNFTViaToken1","className","onClick","e","style","backgroundImage","toUpperCase","Directory","rowNum","slice","map","otherProps","App","autoRefreshOnNetworkChange","useState","setCompo","nftBalance","nftBalanceSet","tokenIDsSet","tokenIDsForSales","tokenIDsForSalesSet","tokenIDsString","tokenIDsStringSet","salePrice","salePriceSet","useEffect","compo1","isMetaMask2","prevCompo","initAction","run","BalanceOf1","CheckUser1","CheckAvailable1","getSalePrice1","tokenIds","tokenIdsString1","forEach","item","idx","push","hasNumber","toString","myString","test","networkId","networkStatus","Provider","Form","onSubmit","Button","content","color","Label","Grid","columns","Row","centered","Column","Dropdown","placeholder","scrolling","wrapSelection","selection","options","onChange","Header","hidden","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"89rBAgBaA,EAIE,gEAJFA,EAKE,gEALFA,EAMG,8DANHA,EAQT,4GARSA,EAYG,EAZHA,EAcD,IAdCA,EAqBG,EArBHA,EAsBa,6CAtBbA,EAuBU,6CAvBVA,EAyBgB,6CAzBhBA,EA0Ba,6CA1BbA,EA4BY,6CA5BZA,EA6BS,6CA7BTA,EA+BY,GA/BZA,EAgCS,GAGTC,EAAQ,CACnB,CACEC,MAAO,OACPC,aAAc,GACdC,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,EACJC,QAAS,aAEX,CACEL,MAAO,OACPE,SAAU,yFACVC,KAAM,QACNC,GAAI,GACJC,QAAS,cAIAC,EAAkB,CAC7B,CACEC,IAAK,IACLC,KAAM,iBACNC,MAAO,YAET,CACEF,IAAK,IACLC,KAAM,oBACNC,MAAO,Y,2BCtHEC,EAAOC,QAAQC,IAafC,EAAO,IAoBPC,EAAU,SAACC,GAAD,OAlBC,SAACA,GAAwB,IAAbC,EAAY,uDAAP,GACvC,IACE,OAAOC,IAAOC,MAAMC,YAAYJ,EAAWK,SAASJ,IACpD,MAAOK,GAEP,OADAV,QAAQW,MAAM,qBAAsBD,IAC5B,GAa0BE,CAASR,IAgClCS,EAAY,uCAAG,WAAMC,EAAOC,EAASC,GAAtB,uBAAAC,EAAA,yDAC1BlB,EAAK,qCAAsCgB,EAAS,aAAcC,QAEpDE,IAAVJ,EAHsB,uBAIxBd,QAAQW,MAAM,sBAJU,kBAKjB,EAAE,IALe,eAOVO,IAAZH,EAPsB,uBAQxBf,QAAQW,MAAM,wBARU,kBASjB,EAAE,IATe,YAWvBG,EAAMK,OAAS,GAXQ,wBAYxBnB,QAAQW,MAAM,yBAZU,kBAajB,EAAE,IAbe,gBAgBLO,KADfE,EAAgBN,EAAM,IAfF,wBAiBxBd,QAAQW,MAAM,2BAjBU,kBAkBjB,EAAE,IAlBe,WAmBS,IAAzBS,EAAcD,OAnBE,wBAoBxBnB,QAAQW,MAAM,qCApBU,kBAqBjB,EAAE,IArBe,WAuBpBU,EAAqBD,EAAc,GACnCE,EAAkBF,EAAc,GAChCG,EAAiBH,EAAc,KAClCI,OAAOC,UAAUT,IAAYP,SAASe,OAAOR,KAAa,GA1BnC,oBA4BlBU,EAAWZ,EAAM,GAAGE,GAGX,IAAZD,EA/BqB,0CAgCf,CAACO,EAAiBC,EAAgBG,IAhCnB,WAiCF,IAAZX,EAjCc,0CAkCf,CAACQ,EAAgBG,IAlCF,WAmCF,IAAZX,EAnCc,0CAoCf,CAACO,EAAiBI,IApCH,iCAsCf,CAACL,EAAoBK,IAtCN,mCAyCT,IAAZX,EAzCqB,0CA0Cf,CAACQ,IA1Cc,WA2CF,IAAZR,EA3Cc,0CA4Cf,CAACO,IA5Cc,iCA8Cf,CAACD,IA9Cc,4CAAH,0DAgEnBM,EAAa,uCAAG,sBAAAV,EAAA,+EACpB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAb,EAAA,sDAEM,KADVF,EAAU5B,GAEd0C,EAAQ1C,GACa,IAAZ4B,EACTc,EAAQ1C,GACa,KAAZ4B,EACTc,EAAQ1C,IAERa,QAAQW,MAAM,4BACdmB,EAAO,6BAVC,2CAAZ,0DADoB,2CAAH,qDAeNC,EAAU,uCAAG,sBAAAd,EAAA,+EACxB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,yBAAAb,EAAA,6DACVlB,EAAK,4BACCiC,EAAM7C,EACN8C,GAAsB,EAHlB,SAIaC,MAAMF,GAAKG,OAAM,SAACzB,GACvCX,EAAK,cAAeW,GACpBoB,GAAO,MANC,UAIJM,EAJI,OAQVrC,EAAK,YAAaqC,IACdA,IAAYA,EAASC,GATf,kCAUWD,EAASE,OAVpB,QAUJC,EAVI,OAWRxC,EAAK,UAAWwC,GACVC,EAAcD,EAAOE,OAAOC,gBAClC3C,EAAK,mBAAoByC,GACzBX,EAAQW,GAdA,4BAeCP,EAfD,kCAgBSG,EAASvC,OAhBlB,QAgBJ8C,EAhBI,OAiBR5C,EAAK,mBAAoB4C,GACzBd,EAAQc,EAAOC,KAAKC,MAAMF,GAAQ,IAlB1B,wBAoBRb,GAAO,GApBC,4CAAZ,0DADwB,2CAAH,qDAkDVgB,EAAgB,uCAAG,sBAAA7B,EAAA,+EAChC,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAb,EAAA,sDAGM,MAFVF,EAAU5B,GAId0C,EADY,CAAC1C,EAA8BA,IAEtB,MAAZ4B,EAETc,EADY,CAAC1C,EAA8BA,IAEtB,IAAZ4B,EAETc,EADY,CAAC1C,EAA+BA,IAEvB,IAAZ4B,EAETc,EADY,CAAC1C,EAAkCA,KAG/Ca,QAAQW,MAAM,2BACdmB,EAAO,4BAjBC,2CAAZ,0DADgC,2CAAH,qDAsBhBiB,EAAW,uCAAG,sBAAA9B,EAAA,+EACzB,IAAIW,SAAQ,SAACC,EAASC,GACpBkB,OAAOC,iBAAiB,OAAxB,sBAAgC,sCAAAhC,EAAA,sEAGPiC,MAHO,YAGxBC,EAHwB,gCAM5BpD,EAAK,0BAMCqD,EAAO,IAAIC,IAAKF,GAZM,SActBA,EAASG,QAAQ,CACrBC,OAAQ,wBACPpB,OAAM,SAACzB,GACRV,QAAQwD,KAAK,mEAAoE9C,GACjFoB,EAAOpB,MAlBmB,OAoB5BX,EAAK,wBAAyB,2BAA4BoD,EAASM,iBACnE5B,EAAQuB,GArBoB,4BAuBnBJ,OAAOI,KAvBY,iBAyBtBA,EAAOJ,OAAOI,KAEpBrD,EAAK,uBACL8B,EAAQuB,GA5BoB,+BA+B5BpD,QAAQW,MAAM,4BA/Bc,UAiCHgB,IAAgBQ,OAAM,SAACzB,GAC9CoB,EAAOpB,MAlCmB,QAiCtBgD,EAjCsB,OAoC5B3D,EAAK,oBAAqB2D,GACpBP,EAAW,IAAIE,IAAKM,UAAUC,aAAaF,GAC3CN,EAAO,IAAIC,IAAKF,GACtBpD,EAAK,yCACL8B,EAAQuB,GAxCoB,iDAFT,2CAAH,qDA8FXS,EAAI,uCAAG,sBAAA5C,EAAA,+EAClB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,2CAAAb,EAAA,6DAEVjB,QAAQC,IAAI,UAFF,kBAKW8C,IAAcZ,OAAM,SAACzB,GAEtC,OADAoB,EAAOpB,IACA,KAPD,UASY,qBAJd0C,EALE,+BAUNrD,EAAK,gBAAiBqD,SAAaA,GACnCtB,EAAO,gBAXD,mBAYC,GAZD,cAcR/B,EAAK,gBAAiBqD,EAAKU,SAdnB,UAgBiBV,EAAKW,gBAAgBC,WAhBtC,eAgBFA,EAhBE,OAiBRjE,EAAK,aAAciE,GACdA,IACHC,EAAO,4CACPjE,QAAQwD,KAAKS,IApBP,UAyBab,EAAKc,IAAIC,cAzBtB,WAyBJC,EAzBI,OA4BHC,MAAMC,QAAQF,IAAiC,IAApBA,EAASjD,SACvC8C,EAAO,4CACPlE,EACE,oBACAqE,EACAC,MAAMC,QAAQF,GACdA,EAASjD,QAEXiD,EAAW,CAAC,oDAIMlD,IAAhBkD,EAAS,GAxCL,wBA0CNrE,EADAkE,EAAO,wCAEPnC,EAAOmC,GA3CD,mBA4CC,GA5CD,eA8CRlE,EAAK,YAAaqE,GAEdG,EAAUpF,EACVqF,GAAmB,OACRtD,IAAX8B,aAA4C9B,IAApB8B,OAAOyB,eAAsDvD,IAA5B8B,OAAOyB,SAASF,SAC3EvE,QAAQwD,KAAK,wDAAyDgB,GACtExE,QAAQwD,KAAK,qBAAsBe,KAEnCC,GAAmB,EACnBD,EAAU9D,SAASuC,OAAOyB,SAASF,QAAS,KAG9CxE,EAAK,WAAYwE,GACF,KAAZA,EACDxE,EAAK,wCACe,IAAZwE,EACRxE,EAAK,2CACe,IAAZwE,EACRxE,EAAK,2CAELC,QAAQwD,KAAK,mBAlEP,UAqE2CV,IArE3C,uCAqED4B,EArEC,KAqEmBC,EArEnB,KAsER3E,QAAQC,IAAI,sBAAuByE,EAAoB,qBAAsBC,GAM3C,qBAJ5BtD,EAAqB,IAAI+B,EAAKc,IAAIU,SACtCC,EAAeC,IACfJ,IA1EM,wBA6EN3E,EAAK,8BAA+BsB,GACpCS,EAAO,8BA9ED,mBA+EC,GA/ED,WAsFuB,qBAJzBR,EAAkB,IAAI8B,EAAKc,IAAIU,SACnCG,EAAYD,IACZH,IApFM,wBAuFN5E,EAAK,2BAA4BuB,GACjCQ,EAAO,2BAxFD,mBAyFC,GAzFD,yBA4FqBR,EAAgB0D,QAAQC,QAAQC,OA5FrD,WA4FFC,EA5FE,OA6FRpF,EAAK,kBAAkBoF,GAIE,qBAHnBC,EAAY,IAAIhC,EAAKc,IAAIU,SAC7BS,EAAWP,IAAKK,IA/FV,wBAkGNpF,EAAK,qBAAsBqF,GAC3BtD,EAAO,qBAnGD,mBAoGC,GApGD,QAuGFV,EAAgB,CACpBC,EAAoBC,EAAiB8D,GAGvCrF,EAAK,sBACL8B,EAAQ,CAAC,OAAOuC,EAASG,EAAQnD,EAAcoD,IA5GvC,kDA8GRzE,EAAK,EAAD,IACJ+B,EAAO,eA/GC,0DAAZ,0DADkB,2CAAH,qDC/TJwD,EAAY,uCAAG,WAAOxE,GAAP,SAAAG,EAAA,+EAAiB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,yBAAAb,EAAA,6DACvDlB,EAAK,8BADkD,SAEbc,EAAaC,EAAO,EAAG,GAFV,sCAEhDQ,EAFgD,KAE/BI,EAF+B,mBAI7BR,IAApBI,GAA8C,KAAbI,EAJgB,kCAKvBJ,EAAgB0D,QAAQO,gBAAgBL,OALjB,QAK7CK,EAL6C,OAM7CC,EAAgBrF,EAAQoF,GAC9B1D,EAAQ2D,GAP2C,wBASnDzF,EAAK,QAAS2B,GACd1B,QAAQW,MAAM,uCAVqC,0DAarDX,QAAQW,MAAM,oBAAd,MACAmB,EAAO,EAAD,IAd+C,0DAAZ,0DAAjB,2CAAH,sDAqCZ2D,GAAS,uCAAG,WAAO3E,GAAP,SAAAG,EAAA,+EACzB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAb,EAAA,6DACVlB,EAAK,2BADK,SAEmCc,EAAaC,EAAO,EAAG,GAF1D,0CAEHO,EAFG,KAEiBK,EAFjB,UAGiBR,IAAvBG,GACFQ,GAAS,GAJD,mBAOcR,EAAmB2D,QAAQU,UAAUhE,GAAUwD,OAP7D,QAOFS,EAPE,OAQR5F,EAAK,WAAY4F,GACjB9D,EAAQ8D,GATA,kDAWR3F,QAAQW,MAAM,sBAAd,MACAmB,GAAQ,GAZA,0DAAZ,0DADyB,2CAAH,sDAiBT8D,GAAS,uCAAG,WAAO9E,GAAP,SAAAG,EAAA,+EACzB,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAb,EAAA,6DACVlB,EAAK,2BADK,SAEmCc,EAAaC,EAAO,EAAG,GAF1D,0CAEHO,EAFG,KAEiBK,EAFjB,UAGiBR,IAAvBG,GACFQ,GAAS,GAJD,mBAQsBR,EAAmB2D,QAAQa,WAAWnE,GAAUwD,OARtE,QAQFY,EARE,OASR/F,EAAK,mBAAoB+F,GACzBjE,EAAQiE,GAVA,kDAYR9F,QAAQW,MAAM,sBAAd,MACAmB,GAAQ,GAbA,0DAAZ,0DADyB,2CAAH,sDAkBTiE,GAAc,uCAAG,WAAOjF,GAAP,SAAAG,EAAA,+EAC9B,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,6BAAAb,EAAA,6DACVlB,EAAK,gCADK,SAEmCc,EAAaC,EAAO,EAAG,GAF1D,0CAEHO,EAFG,eAGiBH,IAAvBG,GACFQ,GAAS,GAJD,UAMyCiB,IANzC,2CAMH4B,EANG,KAMiBC,EANjB,KAOV5E,EAAK,sBAAuB2E,EAAoB,qBAAsBC,GAP5D,oBAS2BtD,EAAmB2D,QAAQa,WAAWlB,GAAiBO,OATlF,QASFc,EATE,OAURjG,EAAK,wBAAyBiG,GAC9BnE,EAAQmE,GAXA,mDAaRhG,QAAQW,MAAM,2BAAd,MACAmB,GAAQ,GAdA,2DAAZ,0DAD8B,2CAAH,sDAsDdmE,GAAgB,uCAAG,WAAOnF,EAAOoF,GAAd,SAAAjF,EAAA,+EAA0B,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,2BAAAb,EAAA,6DACpElB,EAAK,kCAD+D,SAEvBc,EAAaC,EAAO,EAAG,GAFA,sCAE7DO,EAF6D,KAEzCK,EAFyC,mBAIvCR,IAAvBG,GAAiD,KAAbK,EAJ0B,kCAKvCL,EAAmB2D,QAAQmB,OAAOD,GAAShB,OALJ,eAK1DkB,EAL0D,iBAMvC/E,EAAmB2D,QAAQqB,QAAQH,GAAShB,OANL,QAM1DoB,EAN0D,OAQhEvG,EAAK,cAAeqG,EAAY,gBAD1BG,EAAaD,IAAe5E,GAElCG,EAAQuE,GAAcG,GAT0C,0DAYlEvG,QAAQW,MAAR,MACAmB,EAAO,EAAD,IAb4D,0DAAZ,0DAA1B,2CAAH,wDAkBhB0E,GAAY,uCAAG,WAAO1F,EAAO2F,EAAUC,EAAUR,GAAlC,SAAAjF,EAAA,+EAA8C,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAb,EAAA,6DACpFlB,EAAK,8BAD+E,SAE1Cc,EAAaC,EAAO,EAAG,GAFmB,sCAE7EQ,EAF6E,KAE5DI,EAF4D,mBAK1DR,IAApBI,GAA8C,KAAbI,EAL6C,kCAQtDuE,GAAiBnF,EAAOoF,GAR8B,0CAU9EnG,EAAK,yBACL+B,EAAO,yBAXuE,mBAYvE,GAZuE,yBAepDR,EAAgB0D,QAAQO,gBAAgBL,OAfY,eAe1EK,EAf0E,OAkBhFxF,EAAK,YAAa2B,EAAU,cAAe+E,EAAU,cAAeC,EAAU,aAAcR,EAASX,SAAsBA,GAlB3C,UAoB1EjE,EAAgB0D,QACnBwB,aAAaN,GACbS,KAAK,CACJC,KAAMlF,EACN5B,MAAOyF,EACPkB,SAAUA,EAAWvG,EACrB2G,IAAKH,IAENI,GAAG,WAAW,SAACC,GACdhH,EAAK,YAAD,OAAa6C,KAAKoE,UAAUD,EAAS,KAAM,KAC/ClF,EAAQkF,EAAQE,oBAEjBH,GAAG,QAZA,uCAYS,WAAMpG,EAAKqG,GAAX,eAAA9F,EAAA,6DACXjB,QAAQW,MAAM,oBAAqBD,GADxB,SAEUwG,GAAkBpG,EAAO2F,EAAUC,EAAUR,GAAS/D,OAAM,SAACzB,GAGhF,OAFAV,QAAQW,MAAM,yBAA0BD,GACxCoB,EAAOpB,IACA,KALE,cAEL+B,EAFK,OAOX1C,EAAK,4BAA6B0C,GAClCX,EAAOpB,GARI,mBASJ,GATI,2CAZT,yDApB0E,gCA4ChFmB,EAAQ,yCA5CwE,0DA+ClF7B,QAAQW,MAAR,MACAmB,EAAO,EAAD,IAhD4E,0DAAZ,0DAA9C,2CAAH,4DA+EZqF,GAAc,uCAAG,WAAOrG,EAAO2F,EAAUC,EAAUR,GAAlC,SAAAjF,EAAA,+EAA8C,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mCAAAb,EAAA,6DACtFlB,EAAK,gCADiF,SAE5Bc,EAAaC,EAAO,EAAG,GAFK,sCAE/EQ,EAF+E,KAE9DC,EAF8D,KAE9CG,EAF8C,mBAK5DR,IAApBI,QAAoDJ,IAAnBK,GAA6C,KAAbG,EALe,wBAMlF3B,EAAK,YAAa2B,EAAU,cAAe+E,EAAU,cAAeC,EAAU,aAAcR,GANV,UASxDD,GAAiBnF,EAAOoF,GATgC,0CAWhFnG,EAAK,yBACL+B,EAAO,yBAZyE,mBAazE,GAbyE,yBAgBpDR,EAAgB0D,QAAQoC,kBAAkBlC,OAAO/C,OAAM,SAACzB,GAGpF,OAFAV,QAAQwD,KAAK,+CAAgD9C,IAEtD,KAnByE,eAgB5E0G,EAhB4E,OAsBlFrH,EAAK,mBAAoBqH,GAtByD,UAwB/BtE,IAxB+B,gDAwBvD6B,EAxBuD,KAyBlF5E,EAAK,mBAAoB4E,EAAiB,cAAejD,GAzByB,UA2B1DH,EAAeyD,QAAQqC,UAAU3F,EAAUiD,GAAiBO,OAAO/C,OAAM,SAACzB,GAGhG,OAFAV,QAAQwD,KAAK,wCAAyC9C,IAE/C,KA9ByE,WA2B5E2G,EA3B4E,OAiC5EC,EAAY7G,SAAS4G,IAAc5G,SAAS2G,GAClDrH,EAAK,aAAcsH,EAAW,eAAgBC,IAE3CA,EApC+E,iBAqChFvH,EAAK,iCArC2E,+BAwChFA,EAAK,mCAxC2E,UAyC1EwB,EAAeyD,QACpBuC,QAAQ5C,EAAiByC,GACzBT,KAAK,CACJC,KAAMlF,EACN+E,SAAUA,EAAWvG,IAEtB4G,GAAG,WAAW,SAACC,GACd/G,QAAQC,IAAR,mBAAwB2C,KAAKoE,UAAUD,EAAS,KAAM,QAGvDD,GAAG,SAAS,SAACpG,EAAKqG,GAGjB,OAFA/G,QAAQW,MAAM,cAAeD,GAC7BoB,EAAOpB,IACA,KAtDuE,eA2DlFX,EAAK,YAAa2B,EAAU,cAAe+E,EAAU,cAAeC,EAAUR,EAASkB,SAAwBA,GA3D7B,UA6D5E9F,EAAgB0D,QACnBwC,eAAetB,GACfS,KAAK,CACJC,KAAMlF,EACN+E,SAAUA,EAAWvG,EACrB2G,IAAKH,IAENI,GAAG,WAAW,SAACC,GACdhH,EAAK,YAAD,OAAa6C,KAAKoE,UAAUD,EAAS,KAAM,KAC/ClF,EAAQkF,EAAQE,oBAEjBH,GAAG,QAXA,uCAWS,WAAMpG,EAAKqG,GAAX,SAAA9F,EAAA,6DACXjB,QAAQW,MAAM,sBAAuBD,GAOrCoB,EAAOpB,GARI,mBASJ,GATI,2CAXT,yDA7D4E,gCAoFlFmB,EAAQ,yCApF0E,0DAuFpF7B,QAAQW,MAAR,MACAmB,EAAO,EAAD,IAxF8E,0DAAZ,0DAA9C,2CAAH,4DA4FdoF,GAAiB,uCAAG,WAAOpG,EAAO2F,EAAUC,EAAUR,GAAlC,SAAAjF,EAAA,+EAA8C,IAAIW,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAb,EAAA,6DACzFlB,EAAK,mCADoF,SAE/Cc,EAAaC,EAAO,EAAG,GAFwB,sCAElFQ,EAFkF,KAEjEI,EAFiE,KAIzF3B,EAAK,YAAa2B,EAAU+E,EAAUC,EAAUR,GAJyC,cAM/DhF,IAApBI,GAA8C,KAAbI,EANkD,kCAOhEJ,EAAgB0D,QAClCyC,kBAAkBvB,GAClBhB,KAAK,CAAC0B,KAAMlF,IATsE,QAO/Ee,EAP+E,OAUnFZ,EAAQY,GAV2E,wBAYrFZ,EAAQ,yCAZ6E,0DAevF7B,QAAQW,MAAR,MACAmB,EAAO,EAAD,IAhBiF,0DAAZ,0DAA9C,2CAAH,4D,oBCjUf4F,OAAMC,mBAAczG,G,SCS7BnB,I,OAAOC,QAAQC,KAmGN2H,iBAjGE,SAAC,GAAuD,IAAtDvI,EAAqD,EAArDA,MAAOE,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,KAAeqI,GAAqB,EAA9BC,QAA8B,EAArBD,UAAqB,EAAXE,MAC3DhI,GAAK,wBACL,IACIiI,EADElH,EAAQmH,qBAAWC,IACdC,GAAc,EAEnBjC,EAAUzF,SAASpB,EAAM+I,QAAQ,KAAM,KAC1C/D,MAAMC,QAAQuD,IAAaA,EAAS1G,OAAS,IAC9CpB,GAAK,kBACLoI,EAAeN,EAASQ,SAASnC,IAEnCnG,GAAK,WAAYmG,EAAS,iBAAkBiC,GAE5C,IAAMG,EAAcH,EAAa,UAAU,WACrCI,EAAaJ,EAAa,SAAS,UAEb,IAAxBhJ,IACFI,EAAW,oBAEb,IAAMiJ,EAAa,uCAAG,8BAAAvH,EAAA,yDACpBlB,GAAK,+BAAgCV,GAGrCU,GAAK,YAAae,EAAM,KACR,IAAbA,EAAM,GALW,uBAMlBd,QAAQwD,KAAK,oBACbR,OAAOyF,MAAM,yEAPK,mBAQX,GARW,WASVN,EATU,kCAUKpG,IAVL,eAUZ0E,EAVY,OAWZC,EAAWvH,EAXC,UAaJqH,GAAa1F,EAAO2F,EAAUC,EAAUR,GAAS/D,OAAM,SAACzB,GAEpE,OAAO,KAfS,QAalBsH,EAbkB,OAiBlBjI,GAAK,UAAWiI,GAChBhF,OAAO0F,SAASC,SAlBE,wBAoBlB5I,GAAK,gBApBa,4CAAH,qDAwBb6I,EAAM,uCAAG,WAAOC,GAAP,SAAA5H,EAAA,yDACb4H,EAAMC,iBACN/I,GAAK,wBAAyBV,GAC3ByB,EAAM,KAAOnB,EAAgB,GAAGG,MAHtB,gCAIL0I,IAJK,qCAMXzI,GAAK,0BAA2Be,EAAO,iBAAkBqH,GAN9C,UAOLY,IAPK,4CAAH,sDAWNA,EAAe,uCAAG,8BAAA9H,EAAA,yDACtBlB,GAAK,iCAAkCV,GAGvCU,GAAK,YAAae,EAAM,KACR,IAAbA,EAAM,GALa,uBAMpBd,QAAQwD,KAAK,oBACbR,OAAOyF,MAAM,yEAPO,mBAQb,GARa,WASZN,EATY,kCAUGpG,IAVH,eAUd0E,EAVc,OAWdC,EAAWvH,EAXG,UAaNgI,GAAerG,EAAO2F,EAAUC,EAAUR,GAAS/D,OAAM,SAACzB,GAEtE,OAAO,KAfW,QAapBsH,EAboB,OAiBpBjI,GAAK,UAAWiI,GAChBhF,OAAO0F,SAASC,SAlBI,wBAoBpB5I,GAAK,gBApBe,4CAAH,qDAwBrB,OACE,sBACEiJ,UAAS,UAAKxJ,EAAL,cACTyJ,QAAS,SAACC,GACRN,EAAOM,IAHX,UAOE,qBAAKF,UAAU,mBACfG,MAAO,CAACC,gBAAgB,OAAD,OAAS7J,EAAT,QAEvB,sBAAKyJ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB3J,EAAMgK,gBAC7B,sBAAML,UAAS,UAAKT,EAAL,aAAf,SAA4CD,aClErCgB,I,OA9BG,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAQ1B,EAAe,EAAfA,SAE1B,OADA7H,QAAQC,IAAI,kCAAmCsJ,EAAQ,cAAe1B,GACjExD,MAAMC,QAAQuD,IAAcA,EAAS1G,OAKrB,IAAXoI,EAEN,qBAAKP,UAAU,iBAAf,SAEE5J,EAAMoK,MAAM,EAAG,GAAGC,KAAI,gBAAEhK,EAAF,EAAEA,GAAOiK,EAAT,8BACpB,cAAC,GAAD,6BAAuBA,GAAvB,IAAmC7B,SAAUA,IAA9BpI,QAOnB,qBAAKuJ,UAAU,iBAAf,SAEE5J,EAAMoK,MAAM,EAAG,IAAIC,KAAI,gBAAEhK,EAAF,EAAEA,GAAOiK,EAAT,8BACrB,cAAC,GAAD,6BAAuBA,GAAvB,IAAmC7B,SAAUA,IAA9BpI,SAnBrBO,QAAQC,IAAI,sCAEV,qBAAK+I,UAAU,iBAAf,4BCiSSW,OAxRf,WACK3G,OAAOyB,WAAUzB,OAAOyB,SAASmF,4BAA6B,GADpD,MAKaC,mBAAS,IALtB,mBAKN/I,EALM,KAKCgJ,EALD,OAoBuBD,oBAAU,GApBjC,mBAoBNE,EApBM,KAoBMC,EApBN,OAqBmBH,mBAAS,IArB5B,mBAqBII,GArBJ,aAsBmCJ,mBAAS,IAtB5C,mBAsBNK,EAtBM,KAsBYC,EAtBZ,OAuB+BN,mBAAS,IAvBxC,mBAuBNO,EAvBM,KAuBUC,EAvBV,OAwBqBR,mBAAS,IAxB9B,mBAwBNS,EAxBM,KAwBKC,EAxBL,KA2BbC,qBAAU,YAEQ,uCAAG,gCAAAvJ,EAAA,sEACI4C,IAAO1B,OAAM,SAACzB,GACjCV,QAAQW,MAAR,6BAAoCD,OAFrB,OACX+J,EADW,OAUjBX,EAAS,GAAD,mBAAKW,GAAL,CAAa9K,EAAgB,GAAGG,SAGpCkD,OAAOyB,WAGT1E,EAAK,4BACLoD,EAAWH,OAAOyB,SAClBiG,EAAcvH,EAASa,WACvBjE,EAAK,eAAgB2K,GAErBvH,EAAS2D,GAAG,mBAAmB,SAAC1C,GAC9BrE,EAAK,mBAAoBqE,GACF,IAApBA,EAASjD,QACVnB,QAAQW,MAAM,sBAEhBmJ,GAAS,SAAAa,GAAS,MAAI,CAACA,EAAU,GAAIvG,EAAUuG,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,UAGrGxH,EAAS2D,GAAG,gBAAgB,SAACvC,GAC3BxE,EAAK,eAAgBwE,GAIrBvB,OAAO0F,SAASC,aAlCH,2CAAH,qDAsChBiC,KACC,IAGHJ,qBAAU,WACR,IAAMK,EAAG,uCAAG,sBAAA5J,EAAA,6DACVlB,EAAK,oBADK,SAEJ+K,IAFI,uBAGJC,IAHI,uBAIJC,IAJI,uBAKJC,IALI,2CAAH,qDAOJ5G,MAAMC,QAAQxD,IAAWA,EAAMK,OAGlC0J,IAFA9K,EAAK,8CAIN,CAACe,IASJ,IAAMmK,EAAa,uCAAG,WAAOpC,GAAP,eAAA5H,EAAA,6DACjB4H,GAAOA,EAAMC,iBAChB/I,EAAK,+BAFe,SAKAuF,EAAaxE,GAAOqB,OAAM,SAACzB,GAI7C,OAHAV,QAAQW,MAAM,oBAAqBD,GACnC6J,EAAa,MAEN,KATW,OAKdvC,EALc,OAWpBuC,EAAavC,GAXO,2CAAH,sDAab8C,EAAU,uCAAG,WAAOjC,GAAP,eAAA5H,EAAA,6DACd4H,GAAOA,EAAMC,iBAChB/I,EAAK,4BAFY,SAKG0F,GAAU3E,GAAOqB,OAAM,SAACzB,GAI1C,OAHAV,QAAQW,MAAM,iBAAkBD,GAChCsJ,GAAe,IAER,KATQ,OAKXhC,EALW,OAWjBgC,EAAchC,GAXG,2CAAH,sDAcV+C,EAAU,uCAAG,WAAOlC,GAAP,qBAAA5H,EAAA,6DACd4H,GAAOA,EAAMC,iBAChB/I,EAAK,4BAFY,SAKG6F,GAAU9E,GAAOqB,OAAM,SAACzB,GAE1C,OAAO,KAPQ,OAKXsH,EALW,OASjBjI,EAAK,aAAciI,GACbkD,EAAW,GACbC,EAAkB,aAClBjF,EAAU,EACT7B,MAAMC,QAAQ0D,IAAWA,EAAM7G,OAGlC6G,EAAMoD,SAAQ,SAACC,EAAKC,GACfD,IAEDnF,EAAUoF,EAAM,EAChBJ,EAASK,KAAKrF,GACXsF,EAAUL,GACXA,GAAmB,KAAKjF,EAAQuF,WAEhCN,GAAmBjF,EAAQuF,eAVjC1L,EAAK,gCAiBPA,EAAK,YAAamL,EAAUC,GAC5BlB,EAAYiB,GACZb,EAAkBc,GAjCD,4CAAH,sDAoCVH,EAAe,uCAAG,WAAOnC,GAAP,qBAAA5H,EAAA,6DACnB4H,GAAOA,EAAMC,iBAChB/I,EAAK,iCAFiB,SAKFgG,GAAejF,GAAOqB,OAAM,SAACzB,GAE/C,OAAO,KAPa,OAKhBsH,EALgB,OAStBjI,EAAK,kBAAmBiI,GAClBkD,EAAW,GACbC,EAAkB,aAClBjF,EAAU,EACT7B,MAAMC,QAAQ0D,IAAWA,EAAM7G,QAGlC6G,EAAMoD,SAAQ,SAACC,EAAKC,GACfD,IAEDnF,EAAUoF,EAAM,EAChBJ,EAASK,KAAKrF,GACXsF,EAAUL,GACXA,GAAmB,KAAKjF,EAAQuF,WAEhCN,GAAmBjF,EAAQuF,eAOnC1L,EAAK,qBAAsBmL,EAAU,qBAAsBC,GAC3DhB,EAAoBe,GAhCE,4CAAH,sDAmCrB,SAASM,EAAUE,GACjB,MAAO,KAAKC,KAAKD,GAEnB,IAMIE,EAAY,OACH1K,IAAVJ,GAAwC,IAAjBA,EAAMK,QAC9BnB,QAAQwD,KAAK,0BAA2B1C,GACxC8K,EAAY,GAEZA,EAAY9K,EAAM,GAGpB,IAAI+K,EAAgB,GASpB,OAPEA,GADc,IAAb/K,EAAM,GACS,wEACR8K,IAAcpK,OAAOrC,GACb,6EAEA,OAIhB,qBAAK6J,UAAU,MAAf,SACE,eAAC,GAAgB8C,SAAjB,CAA0BhM,MAAOgB,EAAjC,UACA,uEACE,wDAAyC,IAAd8K,EAAiB,qDAAqDA,EAAjG,qBAA8HC,KAC9H,qDAAwB/K,EAAM,MAC9B,8CAAiBwJ,EAAjB,kBAEA,uBACA,eAACyB,EAAA,EAAD,CAAMC,SAAUlB,EAAhB,UACE,cAACmB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UAER,eAACC,EAAA,EAAD,CAAO5M,KAAM,OAAb,UAAsBuK,EAAtB,6BAGF,uBACA,eAACgC,EAAA,EAAD,CAAMC,SAAUjB,EAAhB,UACE,cAACkB,EAAA,EAAD,CACEC,QAAQ,yBACRC,MAAM,UAER,cAACC,EAAA,EAAD,CAAO5M,KAAM,OAAb,SAAsB4K,OAGxB,cAACiC,EAAA,EAAD,CAAMC,QAAS,EAAf,SACI,cAACD,EAAA,EAAKE,IAAN,CAAUC,UAAQ,EAACF,QAAS,EAA5B,SACE,cAACD,EAAA,EAAKI,OAAN,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,iBACZC,WAAS,EACTC,eAAe,EACfC,WAAS,EACTC,QAASpN,EACTqN,SA1DkB,SAAC9D,EAAD,GAAmB,IAAbpJ,EAAY,EAAZA,MACtCC,EAAK,eAAgBD,GAErBgK,GAAS,SAAAa,GAAS,MAAI,CAACA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI7K,eA4DvF,uBAEF,uBACA,cAAC,GAAD,CAAWyJ,OAAQ,EAAG1B,SAAUqC,IAChC,cAAC,GAAD,CAAWX,OAAQ,EAAG1B,SAAUqC,IAEhC,uBACA,sBAAKlB,UAAU,QAAf,UACA,0FACA,wGAEA,wGAEA,uBACA,8FChROiE,I,OAdA,SAAC,GAAD,EAAGC,OAAH,OACb,qBAAKlE,UAAU,SAAf,SAEE,qBAAKA,UAAU,UAAf,SACE,mBAAGA,UAAU,SAASmE,KAAK,2CAA2CC,OAAO,SAASC,IAAI,aAA1F,oCCCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.f7487082.chunk.js","sourcesContent":["/*config ...\n@type: Configuration\n@brief ... \n\n//-------------== To Deploy\nFor Production:  isProduction to 1\n\n$ yarn deploy\nThen push\n//-------------==\nmanual push: copy ethereum192x192.png into repo\n\nerc20TokenAddress: '',\n\n@date   2021-05-23\n*/\nexport const config = {\n  infuraProvider:\n    \"https://eth-mainnet.alchemyapi.io/v2/k2--UTxxx\",\n  ethNodeURL0: \"\",\n  ethNodeURL1: \"https://mainnet.infura.io/v3/75df212e084f4778811330dd3c14907b\",\n  ethNodeURL4: \"https://rinkeby.infura.io/v3/75df212e084f4778811330dd3c14907b\",\n  ethNodeURL42: \"https://kovan.infura.io/v3/75df212e084f4778811330dd3c14907b\",\n  gasDataSource:\n    \"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=GH7KVC23UWE9BTDKDVRDSTTE5X8I25U2X5\",\n  password: \"abc123\",\n  DBID: 0,\n  serverNumer: 1,\n  isProduction: 1,\n  gasPrice: 155,\n  gasLimit: 200000,\n  server0: \"http://localhost:3000\",\n  server1: \"https://google.com\",\n  defaultUserChoice: 2,\n  user1: \"\",\n  user2: \"\",\n  recordsPerPage: 3,\n  contractPair: 1,\n  NFT721Creature_rinkeby: \"0xa8e5142885Ec751fA9CE34a32E6a978DEaC22C8e\",\n  NFT721Sales_rinkeby: \"0x8Ace2c3Cc2e4657312b0B19F51a402Ffc74f9c1a\",\n  ERC20_FR_rinkeby: \"\",\n  NFT721Creature_ethMainnet: \"0xa58257fF0849d04b2B3896C75590Bce6e1e61ae8\",\n  NFT721Sales_ethMainnet: \"0xd34443606A62c7c09dC88e86C4D52165799bd362\",\n  ERC20_FR_mainnet: \"\",\n  NFT721Creature_xDAI_0: \"0xEf169fbA14000463C9A9747C6Ab39750CaeBA440\",\n  NFT721Sales_xDAI_0: \"0xc2153D539cE9778e7011BdC5bA7E56aE8F87d22e\",\n  ERC20_FR_xDAI_0: \"\",\n  NFT721Creature_xDAI_1: \"\",\n  NFT721Sales_xDAI_1: \"\",\n  ERC20_FR_xDAI_1: \"0x270DE58F54649608D316fAa795a9941b355A2Bd0\",\n};\nexport const items = [\n  {\n    title: '# 01',\n    imageUrlFake: '',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiahy2ednf4l2eak4voxoskuqrqh4pnqewxx4f2n6x7jsw6w2ic3gi',\n    size: 'small',\n    id: 1,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 02',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeihxphm3msrktv23s5yuhsct7bvmvic75sifa2oa3mbct3optnggwu',\n    size: 'small',\n    id: 2,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 03',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeib5a36m6dzk7ivztqgmhhzlgtjx2eulvtbxm6all7xe3hmppkuoae',\n    size: 'small',\n    id: 3,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 04',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeibebbfxvxkkxuaei7emgb4vmngykkbq7gnxy2muwb6e7653uvdlfi',\n    size: 'small',\n    id: 4,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 05',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeiekfwtnovtiz7zu5haq7t6vhyzno3lqurwehsprcvi3gho6fema2e',\n    size: 'small',\n    id: 5,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 06',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fttxvo74eik62otd2wy6d6zty5wwig7ocb6waqvl6tfrwb2sze',\n    size: 'small',\n    id: 6,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 07',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeic6l4dehe3usvf25wmd5muzux2mfpe4pjapgir4cmyk43tmin6dei',\n    size: 'small',\n    id: 7,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 08',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifw7vgtgjdcuzfuhhorwp536z34tfsxv3ygetfa42ocbxnxycoxcu',\n    size: 'small',\n    id: 8,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 09',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeifuhh42leyt63cfsvrygygrojnlqwvo5676n5x43lhyvstffc5slq',\n    size: 'small',\n    id: 9,\n    linkUrl: 'shop/mens'\n  },\n  {\n    title: '# 10',\n    imageUrl: 'https://ipfs.fleek.co/ipfs/bafybeih3fibnfg7qiblfa7bkovljjp3755fpkdfhlxfcbciduu7nndjfze',\n    size: 'small',\n    id: 10,\n    linkUrl: 'shop/mens'\n  }\n];\n\nexport const assetSelections = [\n  {\n    key: \"0\",\n    text: \"Pay with Ether\",\n    value: \"Ethereum\",\n  },\n  {\n    key: \"1\",\n    text: \"Pay with FR Token\",\n    value: \"ERC20FR\",\n  },\n];\n\n","import detectEthereumProvider from '@metamask/detect-provider'\nimport { ethers, BigNumber} from \"ethers\"; //BigNumber\nimport Web3 from \"web3\";\nimport { config } from \"./config\";\n//import ERC20Token from \"./ERC20Token.json\";\nimport NFT721Creature from \"./NFT721Creature.json\";\nimport NFT721Sales from \"./NFT721Sales.json\";\nimport ERC20Token from \"./ERC20Token.json\";\n\n//import { rewardsCtrtIdxes, dbSelections } from \"./config\";\n// const instance = new web3.eth.Contract(\n//     JSON.parse(NFTokenMetadataEnumerable.interface),\n//     '0xe6Da20c6F3ba3ac86C7FA3da155E5847F3cDE7e6'\n// );\n// export default instance;\n//--------------------------== utils\nexport const log1 = console.log;\n//const bigNum = (item) => BigNumber.from(item);\n\n//const dp = 18;\n//const base = bigNum(10).pow(dp);\n//const SECONDS_IN_A_DAY = 86400;\n//const one1 = constants.One;\n//const bnOne = bigNum(one1);\n//const MAX_INTEGER = new bigNum(2).pow(new bigNum(256)).sub(new bigNum(1));\n//const OptionType = { Put: 1, Call: 2 };\nexport const addr0 = \"0x0000000000000000000000000000000000000000\";\n\n//const amp = 1000000;\nexport const GWEI = 1000000000;\n\nexport const fromWeiE = (weiAmount, dp = 18) => {\n  try {\n    return ethers.utils.formatUnits(weiAmount, parseInt(dp));\n  } catch (err) {\n    console.error(\"fromWeiE() failed:\", err);\n    return -1;\n  }\n}//input: BN or string, dp = 6 or 18 number, output: string\n\nexport const toWeiE = (amount, dp = 18) => {\n  try {\n    return ethers.utils.parseUnits(amount, parseInt(dp));\n  } catch (err) {\n    console.error(\"toWeiE() failed:\", err);\n    return -1;\n  }\n}//input: string, output: Bn\n\nexport const fromWei = (weiAmount) => fromWeiE(weiAmount);\n//web3.utils.fromWei(weiAmount.toString(), \"ether\");\n\nexport const toWei = (amount) => toWeiE(amount);\n//web3.utils.toWei(amount.toString(), \"ether\");\n\n//--------------------------== \nexport const getTokenBalance = async (compo, userAddr) =>\nnew Promise(async (resolve, reject) => {\n  console.log(\"---------== getTokenBalance()\");\n  const [instERC20TokenFR, addrFrom] = await extractCompo(compo, 2, 0);\n\n  if (instERC20TokenFR === undefined || addrFrom === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = addrFrom;\n    console.log(\"using default accounts[0]\");\n  }\n  console.log(\"userAddr:\", userAddr);\n  try {\n    const data = await instERC20TokenFR.methods.balanceOf(userAddr).call();\n    console.log(\"data:\", data);\n      resolve(data);\n  } catch (err) {\n    console.error(\"getTokenBalance() failed.\", err);\n    reject(-1);\n  }\n});\n//--------------------------==\nexport const extractCompo = async(compo, ctrtNum, acctIdx) => {\n  log1(\"---------== extractCompo. ctrtNum:\", ctrtNum, \", acctIdx:\", acctIdx)\n  //log1(\"compo:\", compo);\n  if (compo === undefined) {\n    console.error(\"compo is undefined\");\n    return [-1];\n  }\n  if (ctrtNum === undefined) {\n    console.error(\"ctrtNum is undefined\");\n    return [-1];\n  }\n  if(compo.length < 2){\n    console.error(\"compo is not complete\");\n    return [-1];\n  }\n  const instContracts = compo[3];\n  if(instContracts === undefined){\n    console.error(\"instContracts undefined\")\n    return [-1];\n  } else if(instContracts.length !== 3){\n    console.error(\"instContracts length is incorrect\")\n    return [-1];\n  }\n  const instNFT721Creature = instContracts[0];\n  const instNFT721Sales = instContracts[1];\n  const instERC20Token = instContracts[2];\n  if(Number.isInteger(acctIdx) && parseInt(Number(acctIdx)) >= 0) {\n    //const addr1 = await getAccounts(compo[0]);\n    const addrFrom = compo[1][acctIdx];\n    //console.log(\"addrFrom:\", addrFrom);\n\n    if(ctrtNum === 3) {\n      return [instNFT721Sales, instERC20Token, addrFrom];\n    } else if(ctrtNum === 2) {\n      return [instERC20Token, addrFrom];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales, addrFrom];\n    } else {\n      return [instNFT721Creature, addrFrom];\n    }\n  } else {\n    if(ctrtNum === 2) {\n      return [instERC20Token];\n    } else if(ctrtNum === 1) {\n      return [instNFT721Sales];\n    } else {\n      return [instNFT721Creature];\n    }\n  }\n}\n\nexport const func = async (compo) =>\nnew Promise(async (resolve, reject) => {\nresolve(-1);\n});\n\n//let stakedAmount  = fromWeiE(weiAmount, dp);\n\n// const err1 = checkDropdown(network1, rewardsCtrtIndex);\n  // if (err1) {\n  //   reject(err1);\n  // }\n\n//---------------------== utility function\nconst getEthNodeURL = async () =>\n  new Promise(async (resolve, reject) => {\n    const ctrtNum = config.contractPair;\n    if (ctrtNum === 1) {\n      resolve(config.ethNodeURL1);\n    } else if (ctrtNum === 4) {\n      resolve(config.ethNodeURL4);\n    } else if (ctrtNum === 42) {\n      resolve(config.ethNodeURL42);\n    } else {\n      console.error(\"ethNodeNumber is invalid\");\n      reject(\"ethNodeNumber is invalid\");\n    }\n  });\n\nexport const getGasData = async () =>\n  new Promise(async (resolve, reject) => {\n    log1(\"---------== getGasData()\");\n    const url = config.gasDataSource;\n    const isToAcceptOpaqueRes = false;\n    const response = await fetch(url).catch((err) => {\n      log1(\"err@ fetch:\", err);\n      reject(false);\n    });\n    log1(\"response:\", response);\n    if (response && response.ok) {\n      let resObj = await response.json();\n      log1(\"resObj:\", resObj);\n      const gasPriceNew = resObj.result.ProposeGasPrice;\n      log1(\"ProposeGasPrice:\", gasPriceNew);\n      resolve(gasPriceNew);\n    } else if (isToAcceptOpaqueRes) {\n      let data = await response.text();\n      log1(\"ProposeGasPrice:\", data);\n      resolve(data ? JSON.parse(data) : {});\n    } else {\n      reject(false);\n    }\n  });\n\n\n  //--------------------------==\nexport const getProviderSigner = async () => \nnew Promise((resolve, reject) => {\n  window.addEventListener(\"load\", async () => {\n    // wait for loading completion to avoid race condition with web3 injecting timing\n    if (window.ethereum) {\n      //new version of MetaMask exists\n      log1(\"newer ehereum detected\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    } else {\n      const ethNodeURL = await getEthNodeURL().catch((err) => {\n        reject(err);\n      });\n      log1(\"using ethNodeURL:\", ethNodeURL);\n      const provider = new ethers.providers.JsonRpcProvider(ethNodeURL);\n      log1(\"no ethereum injected. Use infura endpoint\");\n      const signer = provider.getSigner();\n      resolve(provider, signer);\n    }\n  });\n});\n\nexport const getCtrtAddresses = async () =>\nnew Promise(async (resolve, reject) => {\n  const ctrtNum = config.contractPair;\n  let ctrtAddrs;\n  if (ctrtNum === 77) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_0, config.NFT721Sales_xDAI_0];\n    resolve(ctrtAddrs);\n  } else if (ctrtNum === 100) {\n    ctrtAddrs = [config.NFT721Creature_xDAI_1, config.NFT721Sales_xDAI_1];\n    resolve(ctrtAddrs);\n  } else if (ctrtNum === 4) {\n    ctrtAddrs = [config.NFT721Creature_rinkeby, config.NFT721Sales_rinkeby];\n    resolve(ctrtAddrs);\n  } else if (ctrtNum === 1) {\n    ctrtAddrs = [config.NFT721Creature_ethMainnet, config.NFT721Sales_ethMainnet];\n    resolve(ctrtAddrs);\n  } else {\n    console.error(\"contractPair is invalid\");\n    reject(\"contractPair is invalid\");\n  }\n});\n\nexport const getInitWeb3 = async () =>\n  new Promise((resolve, reject) => {\n    window.addEventListener(\"load\", async () => {\n      // this addEventListener is only needed if you run this getInitWeb3 when the website loads up... wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    });\n  });\n  \nexport const getWeb3 = async () =>\n  new Promise(async(resolve, reject) => {\n    //window.addEventListener(\"load\", async () => {\n      // wait for loading completion to avoid race condition with web3 injecting timing\n\n      const provider = await detectEthereumProvider()\n      if (provider) {\n        //new version of MetaMask exists\n        log1(\"newer ehereum detected\");\n        // From now on, this should always be true:\n        // provider === window.ethereum\n        // Access the decentralized web!\n        // Legacy providers may only have ethereum.sendAsync\n\n        const web3 = new Web3(provider);\n        //has provider inside\n        await provider.request({\n          method: 'eth_requestAccounts',\n        }).catch((err)=> {\n          console.warn(\"User denied account access or error occurred @ provider.request:\", err);\n          reject(err);\n        });\n        log1(\"Acccounts now exposed\", \"ethereum.selectedAddress\", provider.selectedAddress);\n        resolve(web3);\n\n      } else if (window.web3) {\n        //other wallet or older web3\n        const web3 = window.web3;\n        //const web3 = new Web3(window.web3.currentProvider);\n        log1(\"older web3 detected\");\n        resolve(web3);\n      } else {\n        // if the provider is not detected, detectEthereumProvider resolves to null\n        console.error('Please install MetaMask!');\n\n        const ethNodeURL = await getEthNodeURL().catch((err) => {\n          reject(err);\n        });\n        log1(\"using ethNodeURL:\", ethNodeURL);\n        const provider = new Web3.providers.HttpProvider(ethNodeURL);\n        const web3 = new Web3(provider);\n        log1(\"no web3 injected. Use infura endpoint\");\n        resolve(web3);\n      }\n    //});\n  });\n\nexport const init = async () =>\n  new Promise(async (resolve, reject) => {\n    let mesg;\n    console.log(\"init()\");\n    try {\n      //const web3 = await getInitWeb3().\n      const web3 = await getInitWeb3().catch((err) => {\n        reject(err);\n        return false;\n      });\n      if (typeof web3 === \"undefined\") {\n        log1(\"missing web3:\", web3, typeof web3);\n        reject(\"missing web3\");\n        return false;\n      }\n      log1(\"web3 version:\", web3.version);\n\n      const isMetaMask = await web3.currentProvider.isMetaMask;\n      log1(\"isMetaMask\", isMetaMask);\n      if (!isMetaMask) {\n        mesg = \"Please install MetaMask browser extension\";\n        console.warn(mesg);\n        //reject(mesg);\n        //return false;\n      }\n\n      let accounts = await web3.eth.getAccounts();\n      // const networkId = await web3.eth.net.getId();\n      // const deployedNetwork = ctrtX.networks[networkId];\n      if (!Array.isArray(accounts) || accounts.length === 0) {\n        mesg = \"missing accounts. use a fake user account\";\n        log1(\n          \"missing accounts:\",\n          accounts,\n          Array.isArray(accounts),\n          accounts.length\n        );\n        accounts = [\"0xdAC17F958D2ee523a2206206994597C13D831ec7\"]\n        //reject(mesg);\n        //return false;\n      }\n      if (accounts[0] === undefined) {\n        mesg = \"Please login to MetaMask(ETH wallet)\";\n        log1(mesg);\n        reject(mesg);\n        return false;\n      }\n      log1(\"accounts:\", accounts);\n\n      let chainId = config.contractPair;\n      let isWindowEthereum = false;\n      if (window === undefined || window.ethereum === undefined || window.ethereum.chainId === undefined) {\n        console.warn(\"window.ethereum.chainId is invalid, isWindowEthereum:\", isWindowEthereum);\n        console.warn(\"chainId is set to:\", chainId);\n      } else {\n        isWindowEthereum = true;\n        chainId = parseInt(window.ethereum.chainId, 16);\n      }\n\n      log1(\"chainId:\", chainId);\n      if(chainId === 77){\n        log1(\"chainId 77 for xDai Testnet detected\");\n      } else if(chainId === 1){\n        log1(\"chainId 1 for Ethereum Mainnet detected\");\n      } else if(chainId === 4){\n        log1(\"chainId 4 for Ethereum Rinkeby detected\");\n      } else {\n        console.warn(\"chainId invalid\");\n      }\n\n      const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n      console.log(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n\n      const instNFT721Creature = new web3.eth.Contract(\n        NFT721Creature.abi,\n        addrNFT721Creature\n      );\n      if (typeof instNFT721Creature === \"undefined\") {\n        log1(\"missing instNFT721Creature:\", instNFT721Creature);\n        reject(\"missing instNFT721Creature\");\n        return false;\n      }\n\n      const instNFT721Sales = new web3.eth.Contract(\n        NFT721Sales.abi,\n        addrNFT721Sales\n      );\n      if (typeof instNFT721Sales === \"undefined\") {\n        log1(\"missing instNFT721Sales:\", instNFT721Sales);\n        reject(\"missing instNFT721Sales\");\n        return false;\n      }\n\n      const addrERC20Token = await instNFT721Sales.methods.token().call();\n      log1(\"addrERC20Token:\",addrERC20Token);\n      const instERC20 = new web3.eth.Contract(\n        ERC20Token.abi, addrERC20Token\n      );\n      if (typeof instERC20 === \"undefined\") {\n        log1(\"missing instERC20:\", instERC20);\n        reject(\"missing instERC20\");\n        return false;\n      }\n\n      const instContracts = [\n        instNFT721Creature, instNFT721Sales, instERC20\n      ];\n\n      log1(\"init is successful\");\n      resolve([\"web3\",accounts,chainId,instContracts,isWindowEthereum]);\n    } catch (error) {\n      log1(error);\n      reject(\"init failed\");\n    }\n  });\n\n\n/**\nconst getERC20CtrtStates = async (web3, addr, instERC20) =>\n  new Promise(async (resolve, reject) => {\n    try {\n      log1(\"instERC20:\", instERC20);\n      const name = \"\"; //await instERC20.methods.name().call();\n      const symbol = \"\"; //await instERC20.methods.symbol().call();\n      const decimals = \"\"; //await instERC20.methods.decimals().call();\n      const version = \"\"; //await instERC20.methods.version().call();\n      const totalSupply = \"\"; //await instERC20.methods.totalSupply().call();\n\n      const weiAmount = await instERC20.methods.balanceOf(addr).call();\n      const usrAmount = web3.utils.fromWei(weiAmount, \"ether\");\n      log1(\"addr balance:\", usrAmount);\n      resolve([usrAmount, name, symbol, decimals, version, totalSupply]);\n    } catch (error) {\n      log1(error);\n      reject(\"getERC20CtrtStates failed\");\n    }\n  });\n\n  */\n","import { ethers, BigNumber} from \"ethers\"; //BigNumber\n//import { config } from \"./config\";\nimport {extractCompo, toWei, fromWei, GWEI, addr0, getCtrtAddresses, getGasData, fromWeiE, log1} from \"./ethFunc\";\nimport { config } from \"./config\";\n\n//--------------------------==\n//--------------------------== Sale Contract\nexport const getSalePrice = async (compo) => new Promise(async (resolve, reject) => {\n  log1(\"---------== getSalePrice()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      const priceInWeiETH = await instNFT721Sales.methods.priceInWeiETH().call();\n      const priceInETHETH = fromWei(priceInWeiETH);\n      resolve(priceInETHETH);\n    } else {\n      log1(\"addr:\", addrFrom);\n      console.error(\"instNFT721Sales or addrFrom invalid\")\n    }\n  } catch (err) {\n    console.error(\"err@getSalePrice:\", err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n//--------------------------== ERC721 Contract\nexport const ReadFunc = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  log1(\"---------== ReadFunc()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const data = await instNFT721Creature.methods.name().call();\n    log1(\"data:\", data);\n    resolve(data);\n  } catch (err) {\n    console.error(\"ReadFunc() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const BalanceOf = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  log1(\"---------== BalanceOf()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  try {\n    const balance = await instNFT721Creature.methods.balanceOf(addrFrom).call();\n    log1(\"balance:\", balance);\n    resolve(balance);\n  } catch (err) {\n    console.error(\"BalanceOf() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckUser = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  log1(\"---------== CheckUser()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n\n  try {\n    const CheckUserResult = await instNFT721Creature.methods.checkOwner(addrFrom).call();\n    log1(\"CheckUserResult:\", CheckUserResult);\n    resolve(CheckUserResult);\n  } catch (err) {\n    console.error(\"CheckUser() failed.\", err);\n    reject(-1);\n  }\n});\n\nexport const CheckAvailable = async (compo) =>\nnew Promise(async (resolve, reject) => {\n  log1(\"---------== CheckAvailable()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined) {\n    resolve(-1);\n  }\n  const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n  log1(\"addrNFT721Creature:\", addrNFT721Creature, \"\\naddrNFT721Sales:\", addrNFT721Sales);\n  try {\n    const checkAvailableResult = await instNFT721Creature.methods.checkOwner(addrNFT721Sales).call();\n    log1(\"checkAvailableResult:\", checkAvailableResult);\n    resolve(checkAvailableResult);\n  } catch (err) {\n    console.error(\"CheckAvailable() failed.\", err);\n    reject(-1);\n  }\n});\n\n\nexport const GetXYZ = async (compo, userAddr, option) =>\nnew Promise(async (resolve, reject) => {\n  log1(\"---------== GetXYZ()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  if (instNFT721Creature === undefined || addrFrom === undefined) {\n    resolve(-1);\n    return false;\n  }\n\n  if (userAddr === undefined || userAddr === \"\") {\n    userAddr = addrFrom;\n    log1(\"using default accounts[0]\");\n  }\n  log1(\"userAddr:\", userAddr);\n  try {\n    const data = await instNFT721Creature.methods.betters(userAddr).call();\n    log1(\"data:\", data);\n    if(option === 0){\n      resolve(data.deposit);\n    } else if(option === 1){\n      resolve(data.balance);\n    } else if(option === 2){\n      resolve(data.winloss);\n    } else {\n      resolve(data);\n    }\n  } catch (err) {\n    console.error(\"GetXYZ() failed.\", err);\n    reject(-1);\n  }\n});\n\n\n//-------------==\nexport const isTokenAvailable = async (compo, tokenId) => new Promise(async (resolve, reject) => {\n  log1(\"---------== isTokenAvailable()\");\n  const [instNFT721Creature, addrFrom] = await extractCompo(compo, 0, 0);\n  try {\n    if (instNFT721Creature !== undefined && addrFrom !== \"\") {\n      const isExisting = await instNFT721Creature.methods.exists(tokenId).call();\n      const tokenOwner = await instNFT721Creature.methods.ownerOf(tokenId).call();\n      const isNotOwned = tokenOwner !== addrFrom;\n      log1(\"isExisting:\", isExisting, \", isNotOwned:\", isNotOwned);\n      resolve(isExisting && isNotOwned);\n    } \n  }catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\nexport const buyNFTViaETH = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  log1(\"---------== buyNFTViaETH()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      // const addrNFTContract = await instNFT721Sales.methods.addrNFTContract().call();\n      // log1(\"addrNFTContract:\",addrNFTContract );\n      const isAvailable = await isTokenAvailable(compo, tokenId);\n      if(!isAvailable){\n        log1(\"tokenId not available\");\n        reject(\"tokenId not available\");\n        return false;\n      }\n\n      const priceInWeiETH = await instNFT721Sales.methods.priceInWeiETH().call();\n      //const value1= web3.utils.toWei('0.1', \"ether\");\n\n      log1(\"addrFrom:\", addrFrom, \", gasPrice:\", gasPrice, \", gasLimit:\", gasLimit, \", tokenId:\", tokenId, priceInWeiETH, typeof priceInWeiETH );\n    \n      await instNFT721Sales.methods\n        .buyNFTViaETH(tokenId)\n        .send({\n          from: addrFrom,\n          value: priceInWeiETH,\n          gasPrice: gasPrice * GWEI,\n          gas: gasLimit,\n        })\n        .on(\"receipt\", (receipt) => {\n          log1(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          resolve(receipt.transactionHash);\n        })\n        .on(\"error\", async(err, receipt) => {\n          console.error(\"err@buyNFTViaETH:\", err);\n          const result = await buyNFTViaETHCheck(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n            console.error(\"err@buyNFTViaETHCheck:\", err)\n            reject(err);\n            return false;\n          });;\n          log1(\"buyNFTViaETHCheck result:\", result);\n          reject(err);\n          return false;\n        });\n    } else {\n      resolve(\"contract instance or addrFrom invalid\");\n    }\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n\n/**\n * @param {*} compo \n * @param {*} amount \n */\n export const Allowance = async (compo, amount = \"0\") => new Promise(async (resolve, reject) => {\n  console.log(\"---------== Allowance()\");\n  const [instNFT721Sales, instERC20Token, addrFrom] = await extractCompo(compo, 3, 0);\n  if (amount === \"\") amount = \"0\";\n  let amountWei  = toWei(amount);\n  const addrsCtrt = await getCtrtAddresses();\n  console.log(\"addrFrom:\", addrFrom, \", amount:\", amount, amountWei.toString());\n  try {\n    if (instERC20Token !== undefined && addrFrom !== \"\") {\n      const result = await instERC20Token.methods\n        .allowance(addrFrom, addrsCtrt[1]).call();\n      const isAllowed = parseInt(result) !== 0 && parseInt(result) >= parseInt(amountWei);\n        resolve([isAllowed, fromWei(result), amountWei]);\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n  }\n});\n\nexport const buyNFTViaToken = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  log1(\"---------== buyNFTViaToken()\");\n  const [instNFT721Sales, instERC20Token, addrFrom] = await extractCompo(compo, 3, 0);\n\n  try {\n    if (instNFT721Sales !== undefined && instERC20Token !== undefined && addrFrom !== \"\") {\n      log1(\"addrFrom:\", addrFrom, \", gasPrice:\", gasPrice, \", gasLimit:\", gasLimit, \", tokenId:\", tokenId);\n\n      //-------------==\n      const isAvailable = await isTokenAvailable(compo, tokenId);\n      if(!isAvailable){\n        log1(\"tokenId not available\");\n        reject(\"tokenId not available\");\n        return false;\n      }\n      //-------------== check ERC20 allowance\n      const priceInWeiToken = await instNFT721Sales.methods.priceInWeiToken().call().catch((err) => {\n        console.warn(\"err@ instNFT721Sales.methods.priceInWeiToken\", err);\n        //setErrMsg(\"buyNFTViaToken1 failed\");\n        return false;\n      });\n      //const value1= web3.utils.toWei('0.1', \"ether\");\n      log1(\"priceInWeiToken:\", priceInWeiToken);\n\n      const [addrNFT721Creature, addrNFT721Sales]= await getCtrtAddresses();\n      log1(\"addrNFT721Sales:\", addrNFT721Sales, \", addrFrom:\", addrFrom);\n\n      const allowance = await instERC20Token.methods.allowance(addrFrom, addrNFT721Sales).call().catch((err) => {\n        console.warn(\"err@ instERC20Token.methods.allowance\", err);\n        //setErrMsg(\"buyNFTViaToken1 failed\");\n        return false;\n      });\n\n      const isAllowed = parseInt(allowance) >= parseInt(priceInWeiToken);\n      log1(\"allowance:\", allowance, \", isAllowed:\", isAllowed);\n\n      if(isAllowed){\n        log1(\"the user has enough allowance\");\n\n      } else {\n        log1(\"needs to approve more allowance\");\n        await instERC20Token.methods\n        .approve(addrNFT721Sales, priceInWeiToken)\n        .send({\n          from: addrFrom,\n          gasPrice: gasPrice * GWEI,\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          //resolve(receipt.transactionHash);\n        })\n        .on(\"error\", (err, receipt) => {\n          console.error(\"txn failed:\", err);\n          reject(err);\n          return false;\n        });\n      }\n\n      //-------------==\n      log1(\"addrFrom:\", addrFrom, \", gasPrice:\", gasPrice, \", gasLimit:\", gasLimit, tokenId, priceInWeiToken, typeof priceInWeiToken );\n\n      await instNFT721Sales.methods\n        .buyNFTViaERC20(tokenId)\n        .send({\n          from: addrFrom,\n          gasPrice: gasPrice * GWEI,\n          gas: gasLimit,\n        })\n        .on(\"receipt\", (receipt) => {\n          log1(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          resolve(receipt.transactionHash);\n        })\n        .on(\"error\", async(err, receipt) => {\n          console.error(\"err@buyNFTViaToken:\", err);\n          // const result = await buyNFTViaTokenCheck(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n          //   console.error(\"err@buyNFTViaTokenCheck:\", err)\n          //   reject(err);\n          //   return false;\n          // });;\n          // log1(\"buyNFTViaTokenCheck result:\", result);\n          reject(err);\n          return false;\n        });\n    } else {\n      resolve(\"contract instance or addrFrom invalid\");\n    }\n  } catch (err) {\n    console.error(err);\n    reject(err);\n  }\n});\n\nexport const buyNFTViaETHCheck = async (compo, gasPrice, gasLimit, tokenId) => new Promise(async (resolve, reject) => {\n  log1(\"---------== buyNFTViaETHCheck()\");\n  const [instNFT721Sales, addrFrom] = await extractCompo(compo, 1, 0);\n\n  log1(\"addrFrom:\", addrFrom, gasPrice, gasLimit, tokenId);\n  try {\n    if (instNFT721Sales !== undefined && addrFrom !== \"\") {\n      const result = await instNFT721Sales.methods\n        .BuyNFTViaETHCheck(tokenId)\n        .call({from: addrFrom});\n        resolve(result);\n    } else {\n      resolve(\"contract instance or addrFrom invalid\");\n    }\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n//-----------------------== ERC20Token Functions\nexport const Approve = async (compo, gasPrice, gasLimit, amount = '100000') => new Promise(async (resolve, reject) => {\n  console.log(\"---------== Approve()\");\n  const [instNFT721Sales, instERC20Token, addrFrom] = await extractCompo(compo, 3, 0);\n\n  const amountWei  = toWei(amount);\n  const addrsCtrt = await getCtrtAddresses();\n  console.log(\"addrFrom:\", addrFrom,  \", amount:\", amount, amountWei.toString());\n  try {\n    if (instERC20Token !== undefined && addrFrom !== \"\") {\n      await instERC20Token.methods\n        .approve(addrsCtrt[1], amountWei)\n        .send({\n          from: addrFrom,\n          gasPrice: gasPrice * GWEI,\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(`receipt: ${JSON.stringify(receipt, null, 4)}`);\n          resolve(receipt.transactionHash);\n        })\n        .on(\"error\", (err, receipt) => {\n          console.error(\"txn failed:\", err);\n          reject(err);\n          return false;\n        });\n    }\n    resolve(\"contract instance not existing\");\n  } catch (err) {\n    console.error(err);\n    reject(err);\n    //this.setState({errGetBalance: err.message});\n  }\n});\n\n","import React from \"react\";\nexport default React.createContext(undefined);","import React, { useContext } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\n//import { Form, Button, Input, Label, Message, Dropdown, Grid, } from \"semantic-ui-react\";\nimport EthereumContext from \"../../ethereumContext\"; //no {}\nimport { withRouter } from 'react-router-dom';\nimport './menu-item.scss';\nimport {config, assetSelections} from '../../ethereum/config';\nimport { buyNFTViaETH, buyNFTViaToken} from '../../ethereum/store';\nimport { getGasData} from \"../../ethereum/ethFunc\";\n\nconst log1 = console.log;\n\nconst MenuItem = ({title, imageUrl, size, history, tokenIDs, match}) => {\n  log1(\"---------== MenuItem\")\n  const compo = useContext(EthereumContext);\n  let data1, isAvailable = false;\n\n  const tokenId = parseInt(title.replace(\"# \", \"\"));\n  if(Array.isArray(tokenIDs) && tokenIDs.length > 0){\n    log1(\"tokenIDs exist\");\n    isAvailable  = tokenIDs.includes(tokenId);\n  }\n  log1(\"tokenId:\", tokenId, \", isAvailable:\", isAvailable);\n  \n  const ItemLabel1 = (isAvailable)?\"BUY NOW\":\"Sold Out\";\n  const ItemStyle = (isAvailable)?\"BUYNOW\":\"SoldOut\";\n\n  if (config.isProduction !== 1) {\n    imageUrl = \"/img/3dgold1.png\";\n  }\n  const buyNFTViaETH1 = async () => {\n    log1(\"---------== buyNFTViaETH1():\", title);\n    // setLoading(true);\n    // setErrMsg(\"\");\n    log1(\"compo[4]:\", compo[4])\n    if(compo[4] === false){\n      console.warn(\"compo[4] invalid\")\n      window.alert(\"Please install a wallet like MetaMask and switch to a correct network\")\n      return false;\n    } else if(isAvailable){\n      const gasPrice = await getGasData();\n      const gasLimit = config.gasLimit;\n  \n      data1 = await buyNFTViaETH(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n        //setErrMsg(\"buyNFTViaETH1 failed\");\n        return false;\n      });\n      log1(\"txHash:\", data1);\n      window.location.reload();\n    } else {\n      log1(\"already sold\")\n    }\n  }\n\n  const buyNFT = async (event) => {\n    event.preventDefault();\n    log1(\"---------== buyNFT():\", title);\n    if(compo[5] === assetSelections[0].value){\n      await buyNFTViaETH1();\n    } else {\n      log1(\"buyNFTViaToken1, compo:\", compo, \", isAvailable:\", isAvailable);\n      await buyNFTViaToken1();\n    }\n  }\n\n  const buyNFTViaToken1 = async () => {\n    log1(\"---------== buyNFTViaToken1():\", title);\n    // setLoading(true);\n    // setErrMsg(\"\");\n    log1(\"compo[4]:\", compo[4])\n    if(compo[4] === false){\n      console.warn(\"compo[4] invalid\")\n      window.alert(\"Please install a wallet like MetaMask and switch to a correct network\")\n      return false;\n    } else if(isAvailable){\n      const gasPrice = await getGasData();\n      const gasLimit = config.gasLimit;\n  \n      data1 = await buyNFTViaToken(compo, gasPrice, gasLimit, tokenId).catch((err) => {\n        //setErrMsg(\"buyNFTViaToken1 failed\");\n        return false;\n      });\n      log1(\"txHash:\", data1);\n      window.location.reload();\n    } else {\n      log1(\"already sold\")\n    }\n  }\n  \n  return (\n    <div \n      className={`${size} menu-item`} //dynamic classname\n      onClick={(e)=> {\n        buyNFT(e);\n        }}\n      >\n      \n      <div className='background-image' \n      style={{backgroundImage: `url(${imageUrl})`  }} />\n\n      <div className='content'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <span className={`${ItemStyle} subtitle`} >{ItemLabel1}</span>\n      </div>\n\n    </div>\n  );\n}\n//export default (MenuItem);\nexport default withRouter(MenuItem);\n/**\n  onClick={()=> history.push(`${match.url}${linkUrl}`)\n  \n      <CustomButton onClick={()=> log1(\"clicked\")} inverted>\n        Add to cart </CustomButton>\n\n<div className='content'>\n      <h1 className='title'>{title.toUpperCase()}</h1>\n      <span className='subtitle'>SHOP NOW</span>\n    </div>\n */","import React from 'react';\n\nimport MenuItem from '../menu-item/menu-item';\nimport {items} from '../../ethereum/config';\nimport './directory.styles.scss';\n\nconst Directory = ({rowNum, tokenIDs}) =>  {\n  console.log(\"---------== Directory \\nrowNum:\", rowNum, \", tokenIDs:\", tokenIDs);\n  if (!Array.isArray(tokenIDs) || !tokenIDs.length) {\n    console.log(\"tokenIDs: not an array or is empty\")\n    return (\n      <div className='directory-menu'>No tokenIDs</div>\n    );\n  } else if(rowNum === 1) {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(0, 5).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs}/>\n        ))\n      }\n      </div>\n    );\n  } else {\n    return (\n      <div className='directory-menu'>\n      {\n        items.slice(5, 10).map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} tokenIDs={tokenIDs} />\n        ))\n      }\n      </div>\n    );\n  }\n}\n\nexport default Directory;\n/**------------==\n        this.state.sections.map(({id, ...otherProps}) => (\n          <MenuItem key={id} {...otherProps} />\n        ))\n***------------==\n        this.state.sections.map(({id, title, imageUrl, id, size, linkUrl}) => (\n          <MenuItem key={id} title={title} imageUrl={imageUrl} size={size}\n*/","import \"./App.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Input, Label, Dropdown, Grid, } from \"semantic-ui-react\";\n//Card, Header, Segment, GridRow, Message,\n\n//import { DropDownRewardsCtrts } from \"./dropdown\";\nimport {init, log1, } from \"./ethereum/ethFunc\";//getGasData, getERC20Balance, fromWei, checkNetwork, getNFTBalance, \nimport { config, assetSelections} from \"./ethereum/config\"; \nimport {BalanceOf, CheckUser, CheckAvailable, getSalePrice} from \"./ethereum/store\";\n\nimport Directory from './components/directory/directory';\n//import Header from './components/header/header';\n\n/**\nTo add a function: duplicate App function, errMsg, UI, store function(Ethereum function), replace from red part in App.js\n*/\nimport EthereumContext from \"./ethereumContext\"; //no {}\n//import ChildComponent from \"./ChildComponent\";\n\nfunction App() {\n  if(window.ethereum) window.ethereum.autoRefreshOnNetworkChange = false;\n\n  //const gasPriceDefault = config.gasPriceDefault;//1 GWei\n  //const gasLimitDefault = config.gasLimitDefault;//1000000\n  const [compo, setCompo] = useState([]);\n\n  //const [gasPrice, setGasPrice] = useState(gasPriceDefault);\n  //const [gasLimit, setGasLimit] = useState(gasLimitDefault);\n  //const [loading, setLoading] = useState(false);\n  //const [errMsg, setErrMsg] = useState(\"\");\n  const userChoice = config.defaultUserChoice;\n  let userAddrDefault;\n  if(userChoice === 1) {\n    userAddrDefault = config.user1;\n  } else {\n    userAddrDefault = config.user2;\n  }\n  //const [userAddr, userAddrSet] = useState(userAddrDefault);\n\n  const [nftBalance, nftBalanceSet] = useState(-1);\n  const [tokenIDs, tokenIDsSet] = useState([]);\n  const [tokenIDsForSales, tokenIDsForSalesSet] = useState([]);\n  const [tokenIDsString, tokenIDsStringSet] = useState(\"\");\n  const [salePrice, salePriceSet] = useState(\"\");\n  //const [tokenIDsStrSold, tokenIDsStrSoldSet] = useState(\"\");\n\n  useEffect(() => {\n    //cannot add async here, so make async below\n    const initAction = async () => {\n      const compo1 = await init().catch((err) => {\n        console.error(`initAction failed: ${err}`);\n        //alert(`initialization failed`);\n        return;\n      });\n      //log1(\"compo1 length:\", compo1.length)\n      // await BalanceOf1();\n      // await CheckUser1();\n      // await CheckAvailable1();\n      setCompo([...compo1, assetSelections[0].value]);\n\n      let provider, isMetaMask2;\n      if(!window.ethereum){\n        //console.warn(\"window.ethereum does not exist\")\n      } else {\n        log1(\"window.ethereum is valid\")\n        provider = window.ethereum;\n        isMetaMask2 = provider.isMetaMask;\n        log1(\"isMetaMask2:\", isMetaMask2);\n        \n        provider.on('accountsChanged', (accounts) =>{\n          log1(\"accountsChanged:\", accounts);\n          if(accounts.length === 0){\n            console.error(\"accounts are empty\");\n          }\n          setCompo(prevCompo => [prevCompo[0], accounts, prevCompo[2], prevCompo[3], prevCompo[4], prevCompo[5]]);\n        });\n        \n        provider.on('chainChanged', (chainId) => {\n          log1(\"App chainId:\", chainId);\n          // Handle the new chain.\n          // Correctly handling chain changes can be complicated.\n          // We recommend reloading the page unless you have good reason not to.\n          window.location.reload();\n        });\n      }\n    };\n    initAction();\n  }, []); //[] for running once\n\n  //wait for all requirements are populated: load initial conditions\n  useEffect(() => {\n    const run = async () => {\n      log1(\"useEffect2: good\")\n      await BalanceOf1();\n      await CheckUser1();\n      await CheckAvailable1();\n      await getSalePrice1();\n    };\n    if (!Array.isArray(compo) || !compo.length) {\n      log1(\"useEffect2: is not an array, or is empty\")\n    } else {\n      run();\n    }\n  }, [compo]);\n\n  //const delayInMilliseconds = 5000; //1 second\n  // const showErrForDuration = async () => {\n  //   setTimeout(function () {\n  //     //your code to be executed after 1 second\n  //   }, delayInMilliseconds);\n  // };\n\n  const getSalePrice1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== getSalePrice1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await getSalePrice(compo).catch((err) => {\n      console.error(\"err@getSalePrice:\", err);\n      salePriceSet(\"?\");\n      //setErrMsg(\"getSalePrice1 failed\");\n      return false;\n    });\n    salePriceSet(data1);\n  }\n  const BalanceOf1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== BalanceOf1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await BalanceOf(compo).catch((err) => {\n      console.error(\"err@BalanceOf:\", err);\n      nftBalanceSet(-2);\n      //setErrMsg(\"BalanceOf1 failed\");\n      return false;\n    });\n    nftBalanceSet(data1);\n  }\n\n  const CheckUser1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckUser1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckUser(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckUser:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      log1(\"is not an array, or is empty\")\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIds:\", tokenIds, tokenIdsString1);\n    tokenIDsSet(tokenIds);\n    tokenIDsStringSet(tokenIdsString1);\n  }\n\n  const CheckAvailable1 = async (event) => {\n    if(event) event.preventDefault();\n    log1(\"---------== CheckAvailable1()\");\n    // setLoading(true);\n    // setErrMsg(\"\");\n    const data1 = await CheckAvailable(compo).catch((err) => {\n      //setErrMsg(\"CheckUser1 failed\");\n      return false;\n    });\n    log1(\"CheckAvailable:\", data1);\n    const tokenIds = [];\n    let tokenIdsString1 = \"tokenIds: \";\n    let tokenId = 0;\n    if (!Array.isArray(data1) || !data1.length) {\n      // array does not exist, is not an array, or is empty\n    } else {\n      data1.forEach((item,idx) => {\n        if(item) {\n          //log1(idx);\n          tokenId = idx + 1;\n          tokenIds.push(tokenId);\n          if(hasNumber(tokenIdsString1)){\n            tokenIdsString1 += \", \"+tokenId.toString();\n          } else {\n            tokenIdsString1 += tokenId.toString();\n          }\n        } else {\n          \n        }\n      });\n    }\n    log1(\"tokenIdsAvailable:\", tokenIds, \", tokenIdsString1:\", tokenIdsString1);\n    tokenIDsForSalesSet(tokenIds);\n    //tokenIDsStrSoldSet(tokenIdsString1);\n  }\n  function hasNumber(myString) {\n    return /\\d/.test(myString);\n  }\n  const paymentTypeHandleDropdown = (e, { value }) => {\n    log1(\"paymentType:\", value);\n    //paymentTypeSet(value);\n    setCompo(prevCompo => [prevCompo[0], prevCompo[1], prevCompo[2], prevCompo[3], prevCompo[4], value]);\n  };\n\n  let networkId = 0;\n  if(compo === undefined || compo.length !== 6) {\n    console.warn(\"compo failed in App.js:\", compo);\n    networkId = 0\n  } else {\n    networkId = compo[2];\n  }\n\n  let networkStatus = \"\";\n  if(compo[4] === false){\n    networkStatus = \"Please install a wallet like MetaMask and switch to a correct network\";\n  } else if(networkId !== Number(config.contractPair)){\n    networkStatus = \"Incorrect Network. Please change your MetaMask network to Ethereum Mainnet\"\n  } else {\n    networkStatus = \"Good\";\n  }\n\n  return (\n    <div className=\"App\">\n      <EthereumContext.Provider value={compo}>\n      <h1>Freedom Reserve Limited Edition Coins</h1>\n        <h3>Connected Network ID: {networkId === 0? \"Please use WEB3 browser and choose correct network\":networkId}, Network Status: {networkStatus}</h3>\n        <h3>Connected address: {compo[1]}</h3>\n        <h3>Sale Price: {salePrice} ETH per NFT</h3>\n\n        <br></br>\n        <Form onSubmit={BalanceOf1} >\n          <Button\n            content=\"BalanceOf\"\n            color='green'\n          />\n          <Label size={'huge'}>{nftBalance} Freedom Reserve NFT</Label>\n        </Form>\n\n        <br></br>\n        <Form onSubmit={CheckUser1} >\n          <Button\n            content=\"Check User's Token IDs\"\n            color='green'\n          />\n          <Label size={'huge'}>{tokenIDsString}</Label>\n        </Form>\n\n        <Grid columns={2}>\n            <Grid.Row centered columns={4}>\n              <Grid.Column>\n                <Dropdown\n                  placeholder=\"Pay with Ether\"\n                  scrolling\n                  wrapSelection={false}\n                  selection\n                  options={assetSelections}\n                  onChange={paymentTypeHandleDropdown}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <br></br>\n\n        <br></br>\n        <Directory rowNum={1} tokenIDs={tokenIDsForSales} />\n        <Directory rowNum={2} tokenIDs={tokenIDsForSales} />\n\n        <br></br>\n        <div className=\"para2\" >\n        <h3>These coins commemorate the founding of Freedom Reserve.</h3>\n        <h3>The special powers they confer on their holders will be revealed soon.</h3>\n\n        <h3>(All funds raised go towards an exchange listing for Freedom Reserve.)\n        </h3>\n        <br></br>\n        <h3>Copyright 2021 Freedom Reserve. All rights reserved</h3>\n        </div>\n\n      </EthereumContext.Provider>\n    </div>\n  );\n  \n}\n\nexport default App;\n/**\n          <br></br>\n          <Form error={!!errMsg}>\n            <Message error header=\"Error\" content={errMsg} />\n            <Button color=\"orange\" loading={loading} content=\"setGasPrice\" />\n            <Input\n              label=\"unit in GWei\"\n              labelPosition=\"right\"\n              placeholder=\"gas price\"\n              value={gasPrice}\n              onChange={(event) => {\n                setGasPrice(event.target.value);\n                //checkNumeric(event.target.value, \"gasPrice\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"setGasLimit\" />\n            <Input\n              label=\"unit in Wei\"\n              labelPosition=\"right\"\n              placeholder=\"gas limit\"\n              value={gasLimit}\n              onChange={(event) => {\n                setGasLimit(event.target.value);\n                //checkNumeric(event.target.value, \"gasLimit\");\n              }}\n            />\n          </Form>\n\n          <br></br>\n          <Form error={!!errMsg}>\n            <Button color=\"orange\" loading={loading} content=\"userAddr\" />\n            <Input\n              label=\"\"\n              labelPosition=\"right\"\n              placeholder=\"0x...\"\n              value={userAddr}\n              onChange={(event) => {\n                userAddrSet(event.target.value);\n              }}\n            />\n          </Form>\n\n          <Label>gasPrice: {0}</Label>\n\n\n<div>\n    <ArrayObjects arrayInputs={rewardsDB} />\n  </div> \n\n  <br></br>\n  <Header />\n  <Label size={'huge'}> Under Construction </Label>\n*/\n  // const getCurrentAccount = async (event) => {\n  //   event.preventDefault();\n  //   log1(\"---------== getCurrentAccount()\");\n  //   log1(\"account[0]:\", compo[1]);\n  //   const out = checkNetwork(); \n  //   log1(\"out:\", out.isOk, out.chainId)\n  //   return true;\n  // };\n\n  //-------------------==\n  //const [Approve1Va1, Approve1SetVa1] = useState(\"\");\n  //const [Approve1ErrMsg, Approve1SetErrMsg]= useState(\"\");\n\n\n  // const ArrayObjects = ({ arrayInputs }) => (\n  //   <div>\n  //     {arrayInputs.map((item) => (\n  //       <div className=\"item\" key={item.id}>\n  //         id:{item.id}, rewards: {item.reward}, timestamp: {item.updatedAt}\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  //-------------------==\n  // const checkNumeric = (inputValue, inputSource) => {\n  //   log1(\"checkNumeric\", inputValue);\n  //   if (inputValue === \"\" || inputValue < 0 || isNaN(inputValue)) {\n  //     const errMsg =\n  //       \"input error@ \" +\n  //       inputSource +\n  //       \": amount cannot be empty, zero, negative, or non-numeric\";\n  //     console.warn(errMsg);\n  //     showErr(inputSource, errMsg);\n  //     return false;\n  //   } else {\n  //     log1(\"checkNumeric Ok\");\n  //     clearErr(inputSource);\n  //     return true;\n  //   }\n  // };\n  // const showErr = (inputSource, errMsg) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(errMsg);\n  //       break;\n  //     default:\n  //       console.warn(\"showErr: no matched inputSource\");\n  //   }\n  // };\n  // const clearErr = (inputSource) => {\n  //   switch (inputSource) {\n  //     case \"gasPrice\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     case \"gasLimit\":\n  //       setErrMsg(\"\");\n  //       break;\n  //     default:\n  //       console.warn(\"clearErr: no matched inputSource\");\n  //   }\n  // };\n","import React from 'react';\n//import {Link} from 'react-router-dom';\n//import { ReactComponent as Logo } from '../../assets/crown.svg';\nimport './header.scss';\n\nconst Header = ({ hidden }) => (\n  <div className='header'>\n\n    <div className='options'>\n      <a className='option' href=\"https://freedomreserv.eth.link/main.html\" target=\"_blank\" rel=\"noreferrer\">\n      back to homepage\n      </a>\n\n    </div>\n  </div>\n);\n\n//{user: {curentUser}, cart: {hidden}}\n\nexport default Header;\n/**\n    <div className='options'>\n    <Link className='logo-container' to=\"/\">\n      <Logo className='logo' />\n    </Link>\n\n    <Link className='option' to='https://freedomreserv.eth.link'>\n        HOME PAGE\n      </Link>\n\n    </div>\n\n\n\n    */","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './components/header/header';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Header />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}